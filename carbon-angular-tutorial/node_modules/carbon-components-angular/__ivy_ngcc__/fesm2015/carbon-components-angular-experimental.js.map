{"version":3,"file":"carbon-components-angular-experimental.js","sources":["carbon-components-angular/experimental/experimental.service.ts","carbon-components-angular/experimental/experimental.module.ts","carbon-components-angular/experimental/carbon-components-angular-experimental.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from \"@angular/core\";\n\n/**\n * Represents options for an experiment. The only required property is `enabled`, however other options may be supplied.\n */\nexport interface Experiment {\n\tenabled: boolean;\n\t[key: string]: any;\n}\n\n@Injectable()\nexport class ExperimentalService {\n\t/**\n\t * Map to hold all our experiments\n\t */\n\tprivate experiments = new Map<string, Experiment>();\n\n\t/**\n\t * Adds an experiment if it doesn't exist.\n\t */\n\taddExperiment(name: string, options: Experiment = {enabled: false}) {\n\t\tif (!this.experiments.has(name)) {\n\t\t\tthis.experiments.set(name, options);\n\t\t}\n\t}\n\n\t/**\n\t * Enables an experiment by name\n\t * @param name name of the experiment to enable\n\t */\n\tenableExperiment(name: string) {\n\t\tconst experiment = this.getExperiment(name);\n\t\texperiment.enabled = true;\n\t}\n\n\t/**\n\t * Disables an experiment by name\n\t * @param name name of the experiment to disable\n\t */\n\tdisableExperiment(name: string) {\n\t\tconst experiment = this.getExperiment(name);\n\t\texperiment.enabled = false;\n\t}\n\n\t/**\n\t * Get the options for an experiment by name\n\t * @param name name of experiment to get\n\t */\n\tgetExperiment(name: string): Experiment {\n\t\tif (!this.experiments.has(name)) {\n\t\t\tthis.addExperiment(name);\n\t\t\treturn this.getExperiment(name);\n\t\t}\n\n\t\treturn this.experiments.get(name);\n\t}\n\n\t/**\n\t * Get an array of tuples representing an experiment and it's options\n\t */\n\tgetExperiments(): Array<[string, Experiment]> {\n\t\treturn Array.from(this.experiments.entries());\n\t}\n}\n","import { NgModule, SkipSelf, Optional } from \"@angular/core\";\nimport { ExperimentalService } from \"./experimental.service\";\n\n// either provides a new instance of ExperimentalService, or returns the parent\nexport function EXPERIMENTAL_SERVICE_PROVIDER_FACTORY(parentService: ExperimentalService) {\n\treturn parentService || new ExperimentalService();\n}\n\nexport const EXPERIMENTAL_SERVICE_PROVIDER = {\n\tprovide: ExperimentalService,\n\tdeps: [[new Optional(), new SkipSelf(), ExperimentalService]],\n\tuseFactory: EXPERIMENTAL_SERVICE_PROVIDER_FACTORY\n};\n\n@NgModule({\n\tproviders: [\n\t\tExperimentalService,\n\t\tEXPERIMENTAL_SERVICE_PROVIDER\n\t]\n})\nexport class ExperimentalModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}