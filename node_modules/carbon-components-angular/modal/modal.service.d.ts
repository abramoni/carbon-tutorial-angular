/**
 *
 * carbon-angular v0.0.0 | modal.service.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { ComponentFactoryResolver, ComponentRef } from "@angular/core";
import { AlertModalData } from "./alert-modal.interface";
import { PlaceholderService } from "carbon-components-angular/placeholder";
/**
 * Modal service handles instantiating and destroying modal instances.
 * Uses PlaceholderService to track open instances, and for it's placeholder view reference.
 */
import * as ɵngcc0 from '@angular/core';
export declare class ModalService {
    resolver: ComponentFactoryResolver;
    placeholderService: PlaceholderService;
    protected static modalList: Array<ComponentRef<any>>;
    /**
     * Creates an instance of `ModalService`.
     */
    constructor(resolver: ComponentFactoryResolver, placeholderService: PlaceholderService);
    /**
     * Creates and renders the modal component that is passed in.
     * `inputs` is an optional parameter of `data` that can be passed to the `Modal` component.
     */
    create<T>(data: {
        component: any;
        inputs?: any;
    }): ComponentRef<any>;
    /**
     * Creates and renders a new alert modal component.
     * @param data You can pass in:
     * `type` - "default" | "danger" = "default",
     * `label` - a label shown over the title,
     * `title` - modal's title,
     * `content` - modal's content, could include HTML tags.
     * `buttons` is an array of objects
     * `close` custom close function
     * ```
     * {
     * 		text: "Button text",
     * 		type: "primary" | "secondary" | "tertiary" | "ghost" | "danger" | "danger--primary" = "primary",
     * 		click: clickFunction,
     * }
     * ```
     */
    show(data: AlertModalData): ComponentRef<any>;
    /**
     * Destroys the modal on the supplied index.
     * When called without parameters it destroys the most recently created/top most modal.
     */
    destroy(index?: number): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ModalService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<ModalService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJtb2RhbC5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogY2FyYm9uLWFuZ3VsYXIgdjAuMC4wIHwgbW9kYWwuc2VydmljZS5kLnRzXG4gKlxuICogQ29weXJpZ2h0IDIwMTQsIDIwMjEgSUJNXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuXG5pbXBvcnQgeyBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIENvbXBvbmVudFJlZiB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBBbGVydE1vZGFsRGF0YSB9IGZyb20gXCIuL2FsZXJ0LW1vZGFsLmludGVyZmFjZVwiO1xuaW1wb3J0IHsgUGxhY2Vob2xkZXJTZXJ2aWNlIH0gZnJvbSBcImNhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvcGxhY2Vob2xkZXJcIjtcbi8qKlxuICogTW9kYWwgc2VydmljZSBoYW5kbGVzIGluc3RhbnRpYXRpbmcgYW5kIGRlc3Ryb3lpbmcgbW9kYWwgaW5zdGFuY2VzLlxuICogVXNlcyBQbGFjZWhvbGRlclNlcnZpY2UgdG8gdHJhY2sgb3BlbiBpbnN0YW5jZXMsIGFuZCBmb3IgaXQncyBwbGFjZWhvbGRlciB2aWV3IHJlZmVyZW5jZS5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTW9kYWxTZXJ2aWNlIHtcbiAgICByZXNvbHZlcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyO1xuICAgIHBsYWNlaG9sZGVyU2VydmljZTogUGxhY2Vob2xkZXJTZXJ2aWNlO1xuICAgIHByb3RlY3RlZCBzdGF0aWMgbW9kYWxMaXN0OiBBcnJheTxDb21wb25lbnRSZWY8YW55Pj47XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBpbnN0YW5jZSBvZiBgTW9kYWxTZXJ2aWNlYC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihyZXNvbHZlcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBwbGFjZWhvbGRlclNlcnZpY2U6IFBsYWNlaG9sZGVyU2VydmljZSk7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbmQgcmVuZGVycyB0aGUgbW9kYWwgY29tcG9uZW50IHRoYXQgaXMgcGFzc2VkIGluLlxuICAgICAqIGBpbnB1dHNgIGlzIGFuIG9wdGlvbmFsIHBhcmFtZXRlciBvZiBgZGF0YWAgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIHRoZSBgTW9kYWxgIGNvbXBvbmVudC5cbiAgICAgKi9cbiAgICBjcmVhdGU8VD4oZGF0YToge1xuICAgICAgICBjb21wb25lbnQ6IGFueTtcbiAgICAgICAgaW5wdXRzPzogYW55O1xuICAgIH0pOiBDb21wb25lbnRSZWY8YW55PjtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuZCByZW5kZXJzIGEgbmV3IGFsZXJ0IG1vZGFsIGNvbXBvbmVudC5cbiAgICAgKiBAcGFyYW0gZGF0YSBZb3UgY2FuIHBhc3MgaW46XG4gICAgICogYHR5cGVgIC0gXCJkZWZhdWx0XCIgfCBcImRhbmdlclwiID0gXCJkZWZhdWx0XCIsXG4gICAgICogYGxhYmVsYCAtIGEgbGFiZWwgc2hvd24gb3ZlciB0aGUgdGl0bGUsXG4gICAgICogYHRpdGxlYCAtIG1vZGFsJ3MgdGl0bGUsXG4gICAgICogYGNvbnRlbnRgIC0gbW9kYWwncyBjb250ZW50LCBjb3VsZCBpbmNsdWRlIEhUTUwgdGFncy5cbiAgICAgKiBgYnV0dG9uc2AgaXMgYW4gYXJyYXkgb2Ygb2JqZWN0c1xuICAgICAqIGBjbG9zZWAgY3VzdG9tIGNsb3NlIGZ1bmN0aW9uXG4gICAgICogYGBgXG4gICAgICoge1xuICAgICAqIFx0XHR0ZXh0OiBcIkJ1dHRvbiB0ZXh0XCIsXG4gICAgICogXHRcdHR5cGU6IFwicHJpbWFyeVwiIHwgXCJzZWNvbmRhcnlcIiB8IFwidGVydGlhcnlcIiB8IFwiZ2hvc3RcIiB8IFwiZGFuZ2VyXCIgfCBcImRhbmdlci0tcHJpbWFyeVwiID0gXCJwcmltYXJ5XCIsXG4gICAgICogXHRcdGNsaWNrOiBjbGlja0Z1bmN0aW9uLFxuICAgICAqIH1cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBzaG93KGRhdGE6IEFsZXJ0TW9kYWxEYXRhKTogQ29tcG9uZW50UmVmPGFueT47XG4gICAgLyoqXG4gICAgICogRGVzdHJveXMgdGhlIG1vZGFsIG9uIHRoZSBzdXBwbGllZCBpbmRleC5cbiAgICAgKiBXaGVuIGNhbGxlZCB3aXRob3V0IHBhcmFtZXRlcnMgaXQgZGVzdHJveXMgdGhlIG1vc3QgcmVjZW50bHkgY3JlYXRlZC90b3AgbW9zdCBtb2RhbC5cbiAgICAgKi9cbiAgICBkZXN0cm95KGluZGV4PzogbnVtYmVyKTogdm9pZDtcbn1cbiJdfQ==