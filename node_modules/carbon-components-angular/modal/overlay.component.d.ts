/**
 *
 * carbon-angular v0.0.0 | overlay.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter, ElementRef } from "@angular/core";
/**
 * Component for the overlay object that acts as a backdrop to the `Modal` component.
 *
 * The main purpose for this component is to be able to handle click events that fall outside
 * the bounds of the `Modal` component.
 */
import * as ɵngcc0 from '@angular/core';
export declare class Overlay {
    /**
     * Classification of the modal.
     */
    theme: "default" | "danger";
    open: boolean;
    /**
     * To emit the event where the user selects the overlay behind the `Modal`.
     */
    overlaySelect: EventEmitter<{}>;
    /**
     * Maintains a reference to the view DOM element of the `Overlay`.
     */
    overlay: ElementRef;
    /**
     * Handles the user clicking on the `Overlay` which resides outside the `Modal` object.
     */
    overlayClick(event: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Overlay>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Overlay, "ibm-overlay", never, {
    "theme": "theme";
    "open": "open";
}, {
    "overlaySelect": "overlaySelect";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcmxheS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsib3ZlcmxheS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICpcbiAqIGNhcmJvbi1hbmd1bGFyIHYwLjAuMCB8IG92ZXJsYXkuY29tcG9uZW50LmQudHNcbiAqXG4gKiBDb3B5cmlnaHQgMjAxNCwgMjAyMSBJQk1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5cbmltcG9ydCB7IEV2ZW50RW1pdHRlciwgRWxlbWVudFJlZiB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG4vKipcbiAqIENvbXBvbmVudCBmb3IgdGhlIG92ZXJsYXkgb2JqZWN0IHRoYXQgYWN0cyBhcyBhIGJhY2tkcm9wIHRvIHRoZSBgTW9kYWxgIGNvbXBvbmVudC5cbiAqXG4gKiBUaGUgbWFpbiBwdXJwb3NlIGZvciB0aGlzIGNvbXBvbmVudCBpcyB0byBiZSBhYmxlIHRvIGhhbmRsZSBjbGljayBldmVudHMgdGhhdCBmYWxsIG91dHNpZGVcbiAqIHRoZSBib3VuZHMgb2YgdGhlIGBNb2RhbGAgY29tcG9uZW50LlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBPdmVybGF5IHtcbiAgICAvKipcbiAgICAgKiBDbGFzc2lmaWNhdGlvbiBvZiB0aGUgbW9kYWwuXG4gICAgICovXG4gICAgdGhlbWU6IFwiZGVmYXVsdFwiIHwgXCJkYW5nZXJcIjtcbiAgICBvcGVuOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFRvIGVtaXQgdGhlIGV2ZW50IHdoZXJlIHRoZSB1c2VyIHNlbGVjdHMgdGhlIG92ZXJsYXkgYmVoaW5kIHRoZSBgTW9kYWxgLlxuICAgICAqL1xuICAgIG92ZXJsYXlTZWxlY3Q6IEV2ZW50RW1pdHRlcjx7fT47XG4gICAgLyoqXG4gICAgICogTWFpbnRhaW5zIGEgcmVmZXJlbmNlIHRvIHRoZSB2aWV3IERPTSBlbGVtZW50IG9mIHRoZSBgT3ZlcmxheWAuXG4gICAgICovXG4gICAgb3ZlcmxheTogRWxlbWVudFJlZjtcbiAgICAvKipcbiAgICAgKiBIYW5kbGVzIHRoZSB1c2VyIGNsaWNraW5nIG9uIHRoZSBgT3ZlcmxheWAgd2hpY2ggcmVzaWRlcyBvdXRzaWRlIHRoZSBgTW9kYWxgIG9iamVjdC5cbiAgICAgKi9cbiAgICBvdmVybGF5Q2xpY2soZXZlbnQ6IGFueSk6IHZvaWQ7XG59XG4iXX0=