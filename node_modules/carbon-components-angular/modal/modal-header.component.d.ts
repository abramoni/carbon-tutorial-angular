/**
 *
 * carbon-angular v0.0.0 | modal-header.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter } from "@angular/core";
import { I18n } from "carbon-components-angular/i18n";
import { ExperimentalService } from "carbon-components-angular/experimental";
/**
 * ***Inputs***
 * ```html
 * <ibm-modal-header>Header text</ibm-modal-header>
 * ```
 *
 * ***Outputs***
 * ```html
 * <ibm-modal-header (closeSelect)="closeModal()">Header text</ibm-modal-header>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class ModalHeader {
    protected i18n: I18n;
    protected experimental: ExperimentalService;
    /**
     * Sets the style on the modal heading based on its category.
     */
    theme: string;
    /**
     * Accessible label for the header close button.
     * Defaults to the `MODAL.CLOSE` value from the i18n service.
     */
    closeLabel: any;
    /**
     * Set to `false` to hide the close button.
     */
    showCloseButton: boolean;
    /**
     * To emit the event of clicking on the close icon within the modal.
     */
    closeSelect: EventEmitter<{}>;
    constructor(i18n: I18n, experimental: ExperimentalService);
    /**
     * Handles click for the close icon button within the `Modal`.
     */
    onClose(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ModalHeader>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ModalHeader, "ibm-modal-header", never, {
    "theme": "theme";
    "closeLabel": "closeLabel";
    "showCloseButton": "showCloseButton";
}, {
    "closeSelect": "closeSelect";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtaGVhZGVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJtb2RhbC1oZWFkZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0NBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF5QkEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqXG4gKiBjYXJib24tYW5ndWxhciB2MC4wLjAgfCBtb2RhbC1oZWFkZXIuY29tcG9uZW50LmQudHNcbiAqXG4gKiBDb3B5cmlnaHQgMjAxNCwgMjAyMSBJQk1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5cbmltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBJMThuIH0gZnJvbSBcImNhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvaTE4blwiO1xuaW1wb3J0IHsgRXhwZXJpbWVudGFsU2VydmljZSB9IGZyb20gXCJjYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2V4cGVyaW1lbnRhbFwiO1xuLyoqXG4gKiAqKipJbnB1dHMqKipcbiAqIGBgYGh0bWxcbiAqIDxpYm0tbW9kYWwtaGVhZGVyPkhlYWRlciB0ZXh0PC9pYm0tbW9kYWwtaGVhZGVyPlxuICogYGBgXG4gKlxuICogKioqT3V0cHV0cyoqKlxuICogYGBgaHRtbFxuICogPGlibS1tb2RhbC1oZWFkZXIgKGNsb3NlU2VsZWN0KT1cImNsb3NlTW9kYWwoKVwiPkhlYWRlciB0ZXh0PC9pYm0tbW9kYWwtaGVhZGVyPlxuICogYGBgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE1vZGFsSGVhZGVyIHtcbiAgICBwcm90ZWN0ZWQgaTE4bjogSTE4bjtcbiAgICBwcm90ZWN0ZWQgZXhwZXJpbWVudGFsOiBFeHBlcmltZW50YWxTZXJ2aWNlO1xuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIHN0eWxlIG9uIHRoZSBtb2RhbCBoZWFkaW5nIGJhc2VkIG9uIGl0cyBjYXRlZ29yeS5cbiAgICAgKi9cbiAgICB0aGVtZTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEFjY2Vzc2libGUgbGFiZWwgZm9yIHRoZSBoZWFkZXIgY2xvc2UgYnV0dG9uLlxuICAgICAqIERlZmF1bHRzIHRvIHRoZSBgTU9EQUwuQ0xPU0VgIHZhbHVlIGZyb20gdGhlIGkxOG4gc2VydmljZS5cbiAgICAgKi9cbiAgICBjbG9zZUxhYmVsOiBhbnk7XG4gICAgLyoqXG4gICAgICogU2V0IHRvIGBmYWxzZWAgdG8gaGlkZSB0aGUgY2xvc2UgYnV0dG9uLlxuICAgICAqL1xuICAgIHNob3dDbG9zZUJ1dHRvbjogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBUbyBlbWl0IHRoZSBldmVudCBvZiBjbGlja2luZyBvbiB0aGUgY2xvc2UgaWNvbiB3aXRoaW4gdGhlIG1vZGFsLlxuICAgICAqL1xuICAgIGNsb3NlU2VsZWN0OiBFdmVudEVtaXR0ZXI8e30+O1xuICAgIGNvbnN0cnVjdG9yKGkxOG46IEkxOG4sIGV4cGVyaW1lbnRhbDogRXhwZXJpbWVudGFsU2VydmljZSk7XG4gICAgLyoqXG4gICAgICogSGFuZGxlcyBjbGljayBmb3IgdGhlIGNsb3NlIGljb24gYnV0dG9uIHdpdGhpbiB0aGUgYE1vZGFsYC5cbiAgICAgKi9cbiAgICBvbkNsb3NlKCk6IHZvaWQ7XG59XG4iXX0=