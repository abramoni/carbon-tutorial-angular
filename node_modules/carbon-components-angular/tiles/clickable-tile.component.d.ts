/**
 *
 * carbon-angular v0.0.0 | clickable-tile.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter } from "@angular/core";
import { Router } from "@angular/router";
/**
 * Build application's clickable tiles using this component.
 *
 * ## Basic usage
 *
 * ```html
 * <ibm-clickable-tile>
 * 		tile content
 * </ibm-clickable-tile>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class ClickableTile {
    protected router: Router;
    /**
     * Sets the `href` attribute on the `ibm-clickable-tile` element.
     */
    href: string;
    /**
     * Sets the `target` attribute on the `ibm-clickable-tile` element.
     */
    target: string;
    /**
     * Set to `true` to disable the clickable tile.
     */
    disabled: boolean;
    /**
     * Array of commands to send to the router when the link is activated
     * See: https://angular.io/api/router/Router#navigate
     */
    route: any[];
    /**
     * Router options. Used in conjunction with `route`
     * See: https://angular.io/api/router/Router#navigate
     */
    routeExtras: any;
    /**
     * Emits the navigation status promise when the link is activated
     */
    navigation: EventEmitter<Promise<boolean>>;
    constructor(router: Router);
    navigate(event: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClickableTile>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClickableTile, "ibm-clickable-tile", never, {
    "href": "href";
    "disabled": "disabled";
    "target": "target";
    "route": "route";
    "routeExtras": "routeExtras";
}, {
    "navigation": "navigation";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpY2thYmxlLXRpbGUuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNsaWNrYWJsZS10aWxlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBOEJBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogY2FyYm9uLWFuZ3VsYXIgdjAuMC4wIHwgY2xpY2thYmxlLXRpbGUuY29tcG9uZW50LmQudHNcbiAqXG4gKiBDb3B5cmlnaHQgMjAxNCwgMjAyMSBJQk1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5cbmltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwiQGFuZ3VsYXIvcm91dGVyXCI7XG4vKipcbiAqIEJ1aWxkIGFwcGxpY2F0aW9uJ3MgY2xpY2thYmxlIHRpbGVzIHVzaW5nIHRoaXMgY29tcG9uZW50LlxuICpcbiAqICMjIEJhc2ljIHVzYWdlXG4gKlxuICogYGBgaHRtbFxuICogPGlibS1jbGlja2FibGUtdGlsZT5cbiAqIFx0XHR0aWxlIGNvbnRlbnRcbiAqIDwvaWJtLWNsaWNrYWJsZS10aWxlPlxuICogYGBgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENsaWNrYWJsZVRpbGUge1xuICAgIHByb3RlY3RlZCByb3V0ZXI6IFJvdXRlcjtcbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBgaHJlZmAgYXR0cmlidXRlIG9uIHRoZSBgaWJtLWNsaWNrYWJsZS10aWxlYCBlbGVtZW50LlxuICAgICAqL1xuICAgIGhyZWY6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBgdGFyZ2V0YCBhdHRyaWJ1dGUgb24gdGhlIGBpYm0tY2xpY2thYmxlLXRpbGVgIGVsZW1lbnQuXG4gICAgICovXG4gICAgdGFyZ2V0OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogU2V0IHRvIGB0cnVlYCB0byBkaXNhYmxlIHRoZSBjbGlja2FibGUgdGlsZS5cbiAgICAgKi9cbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBBcnJheSBvZiBjb21tYW5kcyB0byBzZW5kIHRvIHRoZSByb3V0ZXIgd2hlbiB0aGUgbGluayBpcyBhY3RpdmF0ZWRcbiAgICAgKiBTZWU6IGh0dHBzOi8vYW5ndWxhci5pby9hcGkvcm91dGVyL1JvdXRlciNuYXZpZ2F0ZVxuICAgICAqL1xuICAgIHJvdXRlOiBhbnlbXTtcbiAgICAvKipcbiAgICAgKiBSb3V0ZXIgb3B0aW9ucy4gVXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIGByb3V0ZWBcbiAgICAgKiBTZWU6IGh0dHBzOi8vYW5ndWxhci5pby9hcGkvcm91dGVyL1JvdXRlciNuYXZpZ2F0ZVxuICAgICAqL1xuICAgIHJvdXRlRXh0cmFzOiBhbnk7XG4gICAgLyoqXG4gICAgICogRW1pdHMgdGhlIG5hdmlnYXRpb24gc3RhdHVzIHByb21pc2Ugd2hlbiB0aGUgbGluayBpcyBhY3RpdmF0ZWRcbiAgICAgKi9cbiAgICBuYXZpZ2F0aW9uOiBFdmVudEVtaXR0ZXI8UHJvbWlzZTxib29sZWFuPj47XG4gICAgY29uc3RydWN0b3Iocm91dGVyOiBSb3V0ZXIpO1xuICAgIG5hdmlnYXRlKGV2ZW50OiBhbnkpOiB2b2lkO1xufVxuIl19