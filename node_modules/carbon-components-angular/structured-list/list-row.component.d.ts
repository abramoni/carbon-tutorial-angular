/**
 *
 * carbon-angular v0.0.0 | list-row.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { QueryList, AfterContentInit, ElementRef, EventEmitter } from "@angular/core";
import { ListColumn } from "./list-column.component";
/**
 * `ListRow` provides a container for the `ListColumn`s that make up the body of a structured list.
 *
 * Example:
 * ```html
 * 	<ibm-list-row>
 *		<ibm-list-column>Row 1</ibm-list-column>
 *		<ibm-list-column nowrap="true">Row One</ibm-list-column>
 *		<ibm-list-column>
 *			Lorem ipsum dolor sit amet,
 *			consectetur adipiscing elit. Nunc dui magna,
 *			finibus id tortor sed, aliquet bibendum augue.
 *			Aenean posuere sem vel euismod dignissim. Nulla ut cursus dolor.
 *			Pellentesque vulputate nisl a porttitor interdum.
 *		</ibm-list-column>
 *	</ibm-list-row>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class ListRow implements AfterContentInit {
    selected: boolean;
    /**
     * Applies an accessible label to the row. Defaults to no label.
     */
    label: any;
    /**
     * The value for the row. Returned via `ngModel` or `selected` event on the containing `StructuredList`.
     */
    value: any;
    /**
     * Internal event used to notify the containing `StructuredList` of changes.
     */
    change: EventEmitter<Event>;
    /**
     * Set by the containing `StructuredList`. Enables or disables row level selection features.
     */
    selection: boolean;
    /**
     * Set by the containing `StructuredList`. When `selection = true`, used for the `name` property on the radio input.
     */
    name: string;
    wrapper: boolean;
    tabindex: string;
    columns: QueryList<ListColumn>;
    input: ElementRef;
    ngAfterContentInit(): void;
    onclick(): void;
    onChange(event: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ListRow>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ListRow, "ibm-list-row", never, {
    "selected": "selected";
    "label": "label";
    "value": "value";
}, {
    "change": "change";
}, ["columns"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1yb3cuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImxpc3Qtcm93LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTZCQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICpcbiAqIGNhcmJvbi1hbmd1bGFyIHYwLjAuMCB8IGxpc3Qtcm93LmNvbXBvbmVudC5kLnRzXG4gKlxuICogQ29weXJpZ2h0IDIwMTQsIDIwMjEgSUJNXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuXG5pbXBvcnQgeyBRdWVyeUxpc3QsIEFmdGVyQ29udGVudEluaXQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBMaXN0Q29sdW1uIH0gZnJvbSBcIi4vbGlzdC1jb2x1bW4uY29tcG9uZW50XCI7XG4vKipcbiAqIGBMaXN0Um93YCBwcm92aWRlcyBhIGNvbnRhaW5lciBmb3IgdGhlIGBMaXN0Q29sdW1uYHMgdGhhdCBtYWtlIHVwIHRoZSBib2R5IG9mIGEgc3RydWN0dXJlZCBsaXN0LlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGBodG1sXG4gKiBcdDxpYm0tbGlzdC1yb3c+XG4gKlx0XHQ8aWJtLWxpc3QtY29sdW1uPlJvdyAxPC9pYm0tbGlzdC1jb2x1bW4+XG4gKlx0XHQ8aWJtLWxpc3QtY29sdW1uIG5vd3JhcD1cInRydWVcIj5Sb3cgT25lPC9pYm0tbGlzdC1jb2x1bW4+XG4gKlx0XHQ8aWJtLWxpc3QtY29sdW1uPlxuICpcdFx0XHRMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCxcbiAqXHRcdFx0Y29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LiBOdW5jIGR1aSBtYWduYSxcbiAqXHRcdFx0ZmluaWJ1cyBpZCB0b3J0b3Igc2VkLCBhbGlxdWV0IGJpYmVuZHVtIGF1Z3VlLlxuICpcdFx0XHRBZW5lYW4gcG9zdWVyZSBzZW0gdmVsIGV1aXNtb2QgZGlnbmlzc2ltLiBOdWxsYSB1dCBjdXJzdXMgZG9sb3IuXG4gKlx0XHRcdFBlbGxlbnRlc3F1ZSB2dWxwdXRhdGUgbmlzbCBhIHBvcnR0aXRvciBpbnRlcmR1bS5cbiAqXHRcdDwvaWJtLWxpc3QtY29sdW1uPlxuICpcdDwvaWJtLWxpc3Qtcm93PlxuICogYGBgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIExpc3RSb3cgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcbiAgICBzZWxlY3RlZDogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBBcHBsaWVzIGFuIGFjY2Vzc2libGUgbGFiZWwgdG8gdGhlIHJvdy4gRGVmYXVsdHMgdG8gbm8gbGFiZWwuXG4gICAgICovXG4gICAgbGFiZWw6IGFueTtcbiAgICAvKipcbiAgICAgKiBUaGUgdmFsdWUgZm9yIHRoZSByb3cuIFJldHVybmVkIHZpYSBgbmdNb2RlbGAgb3IgYHNlbGVjdGVkYCBldmVudCBvbiB0aGUgY29udGFpbmluZyBgU3RydWN0dXJlZExpc3RgLlxuICAgICAqL1xuICAgIHZhbHVlOiBhbnk7XG4gICAgLyoqXG4gICAgICogSW50ZXJuYWwgZXZlbnQgdXNlZCB0byBub3RpZnkgdGhlIGNvbnRhaW5pbmcgYFN0cnVjdHVyZWRMaXN0YCBvZiBjaGFuZ2VzLlxuICAgICAqL1xuICAgIGNoYW5nZTogRXZlbnRFbWl0dGVyPEV2ZW50PjtcbiAgICAvKipcbiAgICAgKiBTZXQgYnkgdGhlIGNvbnRhaW5pbmcgYFN0cnVjdHVyZWRMaXN0YC4gRW5hYmxlcyBvciBkaXNhYmxlcyByb3cgbGV2ZWwgc2VsZWN0aW9uIGZlYXR1cmVzLlxuICAgICAqL1xuICAgIHNlbGVjdGlvbjogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBTZXQgYnkgdGhlIGNvbnRhaW5pbmcgYFN0cnVjdHVyZWRMaXN0YC4gV2hlbiBgc2VsZWN0aW9uID0gdHJ1ZWAsIHVzZWQgZm9yIHRoZSBgbmFtZWAgcHJvcGVydHkgb24gdGhlIHJhZGlvIGlucHV0LlxuICAgICAqL1xuICAgIG5hbWU6IHN0cmluZztcbiAgICB3cmFwcGVyOiBib29sZWFuO1xuICAgIHRhYmluZGV4OiBzdHJpbmc7XG4gICAgY29sdW1uczogUXVlcnlMaXN0PExpc3RDb2x1bW4+O1xuICAgIGlucHV0OiBFbGVtZW50UmVmO1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xuICAgIG9uY2xpY2soKTogdm9pZDtcbiAgICBvbkNoYW5nZShldmVudDogYW55KTogdm9pZDtcbn1cbiJdfQ==