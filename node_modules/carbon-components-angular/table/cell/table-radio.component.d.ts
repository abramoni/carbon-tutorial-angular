/**
 *
 * carbon-angular v0.0.0 | table-radio.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter } from "@angular/core";
import { I18n, Overridable } from "carbon-components-angular/i18n";
import { TableItem } from "../table-item.class";
import { Observable } from "rxjs";
import * as ɵngcc0 from '@angular/core';
export declare class TableRadio {
    protected i18n: I18n;
    row: any[];
    selected: boolean;
    label: string | Observable<string>;
    /**
     * Used to populate the row selection checkbox label with a useful value if set.
     *
     * Example:
     * ```
     * <ibm-table [selectionLabelColumn]="0"></ibm-table>
     * <!-- results in aria-label="Select first column value"
     * (where "first column value" is the value of the first column in the row -->
     * ```
     */
    selectionLabelColumn: number;
    skeleton: boolean;
    /**
     * Emits if a single row is selected.
     */
    change: EventEmitter<{}>;
    protected _label: Overridable;
    constructor(i18n: I18n);
    getSelectionLabelValue(row: TableItem[]): {
        value: any;
    };
    getLabel(): Observable<string>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TableRadio>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TableRadio, "[ibmTableRadio]", never, {
    "selected": "selected";
    "skeleton": "skeleton";
    "label": "label";
    "row": "row";
    "selectionLabelColumn": "selectionLabelColumn";
}, {
    "change": "change";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtcmFkaW8uY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInRhYmxlLXJhZGlvLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBd0JBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkJBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogY2FyYm9uLWFuZ3VsYXIgdjAuMC4wIHwgdGFibGUtcmFkaW8uY29tcG9uZW50LmQudHNcbiAqXG4gKiBDb3B5cmlnaHQgMjAxNCwgMjAyMSBJQk1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5cbmltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBJMThuLCBPdmVycmlkYWJsZSB9IGZyb20gXCJjYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2kxOG5cIjtcbmltcG9ydCB7IFRhYmxlSXRlbSB9IGZyb20gXCIuLi90YWJsZS1pdGVtLmNsYXNzXCI7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSBcInJ4anNcIjtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFRhYmxlUmFkaW8ge1xuICAgIHByb3RlY3RlZCBpMThuOiBJMThuO1xuICAgIHJvdzogYW55W107XG4gICAgc2VsZWN0ZWQ6IGJvb2xlYW47XG4gICAgbGFiZWw6IHN0cmluZyB8IE9ic2VydmFibGU8c3RyaW5nPjtcbiAgICAvKipcbiAgICAgKiBVc2VkIHRvIHBvcHVsYXRlIHRoZSByb3cgc2VsZWN0aW9uIGNoZWNrYm94IGxhYmVsIHdpdGggYSB1c2VmdWwgdmFsdWUgaWYgc2V0LlxuICAgICAqXG4gICAgICogRXhhbXBsZTpcbiAgICAgKiBgYGBcbiAgICAgKiA8aWJtLXRhYmxlIFtzZWxlY3Rpb25MYWJlbENvbHVtbl09XCIwXCI+PC9pYm0tdGFibGU+XG4gICAgICogPCEtLSByZXN1bHRzIGluIGFyaWEtbGFiZWw9XCJTZWxlY3QgZmlyc3QgY29sdW1uIHZhbHVlXCJcbiAgICAgKiAod2hlcmUgXCJmaXJzdCBjb2x1bW4gdmFsdWVcIiBpcyB0aGUgdmFsdWUgb2YgdGhlIGZpcnN0IGNvbHVtbiBpbiB0aGUgcm93IC0tPlxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHNlbGVjdGlvbkxhYmVsQ29sdW1uOiBudW1iZXI7XG4gICAgc2tlbGV0b246IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogRW1pdHMgaWYgYSBzaW5nbGUgcm93IGlzIHNlbGVjdGVkLlxuICAgICAqL1xuICAgIGNoYW5nZTogRXZlbnRFbWl0dGVyPHt9PjtcbiAgICBwcm90ZWN0ZWQgX2xhYmVsOiBPdmVycmlkYWJsZTtcbiAgICBjb25zdHJ1Y3RvcihpMThuOiBJMThuKTtcbiAgICBnZXRTZWxlY3Rpb25MYWJlbFZhbHVlKHJvdzogVGFibGVJdGVtW10pOiB7XG4gICAgICAgIHZhbHVlOiBhbnk7XG4gICAgfTtcbiAgICBnZXRMYWJlbCgpOiBPYnNlcnZhYmxlPHN0cmluZz47XG59XG4iXX0=