/**
 *
 * carbon-angular v0.0.0 | table-expand-button.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter } from "@angular/core";
import { I18n, Overridable } from "carbon-components-angular/i18n";
import { Observable } from "rxjs";
import * as ɵngcc0 from '@angular/core';
export declare class TableExpandButton {
    protected i18n: I18n;
    /**
     * Set to true to indicate the row has expanded
     */
    expanded: boolean;
    /**
     * Set to true to indicate the row can be expanded.
     * Defaults to false to allow for correct column alignment
     */
    expandable: boolean;
    ariaLabel: string | Observable<string>;
    skeleton: boolean;
    expandClass: boolean;
    readonly previousValue: string;
    expandRow: EventEmitter<void>;
    protected _ariaLabel: Overridable;
    constructor(i18n: I18n);
    getAriaLabel(): Observable<string>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TableExpandButton>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TableExpandButton, "[ibmTableExpandButton]", never, {
    "expanded": "expanded";
    "expandable": "expandable";
    "skeleton": "skeleton";
    "ariaLabel": "ariaLabel";
}, {
    "expandRow": "expandRow";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtZXhwYW5kLWJ1dHRvbi5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidGFibGUtZXhwYW5kLWJ1dHRvbi5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdUJBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUJBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogY2FyYm9uLWFuZ3VsYXIgdjAuMC4wIHwgdGFibGUtZXhwYW5kLWJ1dHRvbi5jb21wb25lbnQuZC50c1xuICpcbiAqIENvcHlyaWdodCAyMDE0LCAyMDIxIElCTVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cblxuaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEkxOG4sIE92ZXJyaWRhYmxlIH0gZnJvbSBcImNhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvaTE4blwiO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gXCJyeGpzXCI7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUYWJsZUV4cGFuZEJ1dHRvbiB7XG4gICAgcHJvdGVjdGVkIGkxOG46IEkxOG47XG4gICAgLyoqXG4gICAgICogU2V0IHRvIHRydWUgdG8gaW5kaWNhdGUgdGhlIHJvdyBoYXMgZXhwYW5kZWRcbiAgICAgKi9cbiAgICBleHBhbmRlZDogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBTZXQgdG8gdHJ1ZSB0byBpbmRpY2F0ZSB0aGUgcm93IGNhbiBiZSBleHBhbmRlZC5cbiAgICAgKiBEZWZhdWx0cyB0byBmYWxzZSB0byBhbGxvdyBmb3IgY29ycmVjdCBjb2x1bW4gYWxpZ25tZW50XG4gICAgICovXG4gICAgZXhwYW5kYWJsZTogYm9vbGVhbjtcbiAgICBhcmlhTGFiZWw6IHN0cmluZyB8IE9ic2VydmFibGU8c3RyaW5nPjtcbiAgICBza2VsZXRvbjogYm9vbGVhbjtcbiAgICBleHBhbmRDbGFzczogYm9vbGVhbjtcbiAgICByZWFkb25seSBwcmV2aW91c1ZhbHVlOiBzdHJpbmc7XG4gICAgZXhwYW5kUm93OiBFdmVudEVtaXR0ZXI8dm9pZD47XG4gICAgcHJvdGVjdGVkIF9hcmlhTGFiZWw6IE92ZXJyaWRhYmxlO1xuICAgIGNvbnN0cnVjdG9yKGkxOG46IEkxOG4pO1xuICAgIGdldEFyaWFMYWJlbCgpOiBPYnNlcnZhYmxlPHN0cmluZz47XG59XG4iXX0=