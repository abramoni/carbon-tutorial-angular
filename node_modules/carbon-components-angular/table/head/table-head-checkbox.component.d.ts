/**
 *
 * carbon-angular v0.0.0 | table-head-checkbox.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter } from "@angular/core";
import { I18n, Overridable } from "carbon-components-angular/i18n";
import { Observable } from "rxjs";
import { TableRowSize } from "../table.types";
import * as ɵngcc0 from '@angular/core';
export declare class TableHeadCheckbox {
    protected i18n: I18n;
    private static tableSelectAllCount;
    /**
     * Size of the table rows.
     */
    size: TableRowSize;
    checked: boolean;
    indeterminate: boolean;
    skeleton: boolean;
    name: string;
    ariaLabel: string | Observable<string>;
    change: EventEmitter<void>;
    hostClass: boolean;
    protected _ariaLabel: Overridable;
    constructor(i18n: I18n);
    getAriaLabel(): Observable<string>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TableHeadCheckbox>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TableHeadCheckbox, "[ibmTableHeadCheckbox]", never, {
    "size": "size";
    "checked": "checked";
    "indeterminate": "indeterminate";
    "skeleton": "skeleton";
    "name": "name";
    "ariaLabel": "ariaLabel";
}, {
    "change": "change";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtaGVhZC1jaGVja2JveC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidGFibGUtaGVhZC1jaGVja2JveC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdCQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICpcbiAqIGNhcmJvbi1hbmd1bGFyIHYwLjAuMCB8IHRhYmxlLWhlYWQtY2hlY2tib3guY29tcG9uZW50LmQudHNcbiAqXG4gKiBDb3B5cmlnaHQgMjAxNCwgMjAyMSBJQk1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5cbmltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBJMThuLCBPdmVycmlkYWJsZSB9IGZyb20gXCJjYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2kxOG5cIjtcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tIFwicnhqc1wiO1xuaW1wb3J0IHsgVGFibGVSb3dTaXplIH0gZnJvbSBcIi4uL3RhYmxlLnR5cGVzXCI7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUYWJsZUhlYWRDaGVja2JveCB7XG4gICAgcHJvdGVjdGVkIGkxOG46IEkxOG47XG4gICAgcHJpdmF0ZSBzdGF0aWMgdGFibGVTZWxlY3RBbGxDb3VudDtcbiAgICAvKipcbiAgICAgKiBTaXplIG9mIHRoZSB0YWJsZSByb3dzLlxuICAgICAqL1xuICAgIHNpemU6IFRhYmxlUm93U2l6ZTtcbiAgICBjaGVja2VkOiBib29sZWFuO1xuICAgIGluZGV0ZXJtaW5hdGU6IGJvb2xlYW47XG4gICAgc2tlbGV0b246IGJvb2xlYW47XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIGFyaWFMYWJlbDogc3RyaW5nIHwgT2JzZXJ2YWJsZTxzdHJpbmc+O1xuICAgIGNoYW5nZTogRXZlbnRFbWl0dGVyPHZvaWQ+O1xuICAgIGhvc3RDbGFzczogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgX2FyaWFMYWJlbDogT3ZlcnJpZGFibGU7XG4gICAgY29uc3RydWN0b3IoaTE4bjogSTE4bik7XG4gICAgZ2V0QXJpYUxhYmVsKCk6IE9ic2VydmFibGU8c3RyaW5nPjtcbn1cbiJdfQ==