/**
 *
 * carbon-angular v0.0.0 | content-switcher.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { QueryList, EventEmitter, AfterViewInit, ElementRef } from "@angular/core";
import { ContentSwitcherOption } from "./content-switcher-option.directive";
/**
 * The content switcher can be used for toggling between distinct options.
 * Similar to tabs, but without an associated content panel
 *
 * [See demo](../../?path=/story/components-content-switcher--basic)
 *
 * ```html
 * <ibm-content-switcher (selected)="selected($event)">
 *		<button ibmContentOption>First section</button>
 *		<button ibmContentOption>Second section</button>
 *		<button ibmContentOption>Third section</button>
 *	</ibm-content-switcher>
 *	```
 *
 * <example-url>../../iframe.html?id=components-content-switcher--basic</example-url>
 */
import * as ɵngcc0 from '@angular/core';
export declare class ContentSwitcher implements AfterViewInit {
    protected elementRef: ElementRef;
    ariaLabel: string;
    /**
     * `light` or `dark` content switcher theme
     */
    theme: "light" | "dark";
    /**
     * Emits the activated `ContentSwitcherOption`
     */
    selected: EventEmitter<ContentSwitcherOption>;
    options: QueryList<ContentSwitcherOption>;
    constructor(elementRef: ElementRef);
    ngAfterViewInit(): void;
    hostkeys(event: KeyboardEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ContentSwitcher>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ContentSwitcher, "ibm-content-switcher", never, {
    "ariaLabel": "ariaLabel";
    "theme": "theme";
}, {
    "selected": "selected";
}, ["options"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC1zd2l0Y2hlci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiY29udGVudC1zd2l0Y2hlci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0NBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqXG4gKiBjYXJib24tYW5ndWxhciB2MC4wLjAgfCBjb250ZW50LXN3aXRjaGVyLmNvbXBvbmVudC5kLnRzXG4gKlxuICogQ29weXJpZ2h0IDIwMTQsIDIwMjEgSUJNXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuXG5pbXBvcnQgeyBRdWVyeUxpc3QsIEV2ZW50RW1pdHRlciwgQWZ0ZXJWaWV3SW5pdCwgRWxlbWVudFJlZiB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBDb250ZW50U3dpdGNoZXJPcHRpb24gfSBmcm9tIFwiLi9jb250ZW50LXN3aXRjaGVyLW9wdGlvbi5kaXJlY3RpdmVcIjtcbi8qKlxuICogVGhlIGNvbnRlbnQgc3dpdGNoZXIgY2FuIGJlIHVzZWQgZm9yIHRvZ2dsaW5nIGJldHdlZW4gZGlzdGluY3Qgb3B0aW9ucy5cbiAqIFNpbWlsYXIgdG8gdGFicywgYnV0IHdpdGhvdXQgYW4gYXNzb2NpYXRlZCBjb250ZW50IHBhbmVsXG4gKlxuICogW1NlZSBkZW1vXSguLi8uLi8/cGF0aD0vc3RvcnkvY29tcG9uZW50cy1jb250ZW50LXN3aXRjaGVyLS1iYXNpYylcbiAqXG4gKiBgYGBodG1sXG4gKiA8aWJtLWNvbnRlbnQtc3dpdGNoZXIgKHNlbGVjdGVkKT1cInNlbGVjdGVkKCRldmVudClcIj5cbiAqXHRcdDxidXR0b24gaWJtQ29udGVudE9wdGlvbj5GaXJzdCBzZWN0aW9uPC9idXR0b24+XG4gKlx0XHQ8YnV0dG9uIGlibUNvbnRlbnRPcHRpb24+U2Vjb25kIHNlY3Rpb248L2J1dHRvbj5cbiAqXHRcdDxidXR0b24gaWJtQ29udGVudE9wdGlvbj5UaGlyZCBzZWN0aW9uPC9idXR0b24+XG4gKlx0PC9pYm0tY29udGVudC1zd2l0Y2hlcj5cbiAqXHRgYGBcbiAqXG4gKiA8ZXhhbXBsZS11cmw+Li4vLi4vaWZyYW1lLmh0bWw/aWQ9Y29tcG9uZW50cy1jb250ZW50LXN3aXRjaGVyLS1iYXNpYzwvZXhhbXBsZS11cmw+XG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENvbnRlbnRTd2l0Y2hlciBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICAgIHByb3RlY3RlZCBlbGVtZW50UmVmOiBFbGVtZW50UmVmO1xuICAgIGFyaWFMYWJlbDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIGBsaWdodGAgb3IgYGRhcmtgIGNvbnRlbnQgc3dpdGNoZXIgdGhlbWVcbiAgICAgKi9cbiAgICB0aGVtZTogXCJsaWdodFwiIHwgXCJkYXJrXCI7XG4gICAgLyoqXG4gICAgICogRW1pdHMgdGhlIGFjdGl2YXRlZCBgQ29udGVudFN3aXRjaGVyT3B0aW9uYFxuICAgICAqL1xuICAgIHNlbGVjdGVkOiBFdmVudEVtaXR0ZXI8Q29udGVudFN3aXRjaGVyT3B0aW9uPjtcbiAgICBvcHRpb25zOiBRdWVyeUxpc3Q8Q29udGVudFN3aXRjaGVyT3B0aW9uPjtcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmKTtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBob3N0a2V5cyhldmVudDogS2V5Ym9hcmRFdmVudCk6IHZvaWQ7XG59XG4iXX0=