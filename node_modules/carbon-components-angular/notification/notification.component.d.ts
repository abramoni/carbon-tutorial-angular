/**
 *
 * carbon-angular v0.0.0 | notification.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter, ComponentRef } from "@angular/core";
import { NotificationContent } from "./notification-content.interface";
import { I18n } from "carbon-components-angular/i18n";
import { NotificationDisplayService } from "./notification-display.service";
/**
 * Notification messages are displayed toward the top of the UI and do not interrupt user’s work.
 *
 * [See demo](../../?path=/story/components-notification--basic)
 *
 * <example-url>../../iframe.html?id=components-notification--basic</example-url>
 */
import * as ɵngcc0 from '@angular/core';
export declare class Notification {
    protected notificationDisplayService: NotificationDisplayService;
    protected i18n: I18n;
    private static notificationCount;
    /**
     * Can have `type`, `title`, and `message` members.
     *
     * `type` can be one of `"info"`, `"warning"`, `"error"`, `"success"`
     *
     * `message` is the message to display
     */
    notificationObj: NotificationContent;
    /**
     * Emits on close.
     */
    close: EventEmitter<any>;
    componentRef: ComponentRef<Notification>;
    notification: any;
    notificationID: string;
    notificationClass: boolean;
    role: string;
    readonly isError: boolean;
    readonly isInfo: boolean;
    readonly isSuccess: boolean;
    readonly isWarning: boolean;
    readonly isLowContrast: boolean;
    readonly isCloseHidden: boolean;
    protected defaultNotificationObj: {
        title: string;
        message: string;
        type: string;
        showClose: boolean;
        closeLabel: any;
    };
    protected _notificationObj: NotificationContent;
    constructor(notificationDisplayService: NotificationDisplayService, i18n: I18n);
    /**
     * Emits close event.
     */
    onClose(): void;
    onClick(action: any, event: any): void;
    destroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Notification>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Notification, "ibm-notification", never, {
    "notificationObj": "notificationObj";
}, {
    "close": "close";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJub3RpZmljYXRpb24uY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBK0JBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEwQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqXG4gKiBjYXJib24tYW5ndWxhciB2MC4wLjAgfCBub3RpZmljYXRpb24uY29tcG9uZW50LmQudHNcbiAqXG4gKiBDb3B5cmlnaHQgMjAxNCwgMjAyMSBJQk1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5cbmltcG9ydCB7IEV2ZW50RW1pdHRlciwgQ29tcG9uZW50UmVmIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IE5vdGlmaWNhdGlvbkNvbnRlbnQgfSBmcm9tIFwiLi9ub3RpZmljYXRpb24tY29udGVudC5pbnRlcmZhY2VcIjtcbmltcG9ydCB7IEkxOG4gfSBmcm9tIFwiY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9pMThuXCI7XG5pbXBvcnQgeyBOb3RpZmljYXRpb25EaXNwbGF5U2VydmljZSB9IGZyb20gXCIuL25vdGlmaWNhdGlvbi1kaXNwbGF5LnNlcnZpY2VcIjtcbi8qKlxuICogTm90aWZpY2F0aW9uIG1lc3NhZ2VzIGFyZSBkaXNwbGF5ZWQgdG93YXJkIHRoZSB0b3Agb2YgdGhlIFVJIGFuZCBkbyBub3QgaW50ZXJydXB0IHVzZXLigJlzIHdvcmsuXG4gKlxuICogW1NlZSBkZW1vXSguLi8uLi8/cGF0aD0vc3RvcnkvY29tcG9uZW50cy1ub3RpZmljYXRpb24tLWJhc2ljKVxuICpcbiAqIDxleGFtcGxlLXVybD4uLi8uLi9pZnJhbWUuaHRtbD9pZD1jb21wb25lbnRzLW5vdGlmaWNhdGlvbi0tYmFzaWM8L2V4YW1wbGUtdXJsPlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOb3RpZmljYXRpb24ge1xuICAgIHByb3RlY3RlZCBub3RpZmljYXRpb25EaXNwbGF5U2VydmljZTogTm90aWZpY2F0aW9uRGlzcGxheVNlcnZpY2U7XG4gICAgcHJvdGVjdGVkIGkxOG46IEkxOG47XG4gICAgcHJpdmF0ZSBzdGF0aWMgbm90aWZpY2F0aW9uQ291bnQ7XG4gICAgLyoqXG4gICAgICogQ2FuIGhhdmUgYHR5cGVgLCBgdGl0bGVgLCBhbmQgYG1lc3NhZ2VgIG1lbWJlcnMuXG4gICAgICpcbiAgICAgKiBgdHlwZWAgY2FuIGJlIG9uZSBvZiBgXCJpbmZvXCJgLCBgXCJ3YXJuaW5nXCJgLCBgXCJlcnJvclwiYCwgYFwic3VjY2Vzc1wiYFxuICAgICAqXG4gICAgICogYG1lc3NhZ2VgIGlzIHRoZSBtZXNzYWdlIHRvIGRpc3BsYXlcbiAgICAgKi9cbiAgICBub3RpZmljYXRpb25PYmo6IE5vdGlmaWNhdGlvbkNvbnRlbnQ7XG4gICAgLyoqXG4gICAgICogRW1pdHMgb24gY2xvc2UuXG4gICAgICovXG4gICAgY2xvc2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNvbXBvbmVudFJlZjogQ29tcG9uZW50UmVmPE5vdGlmaWNhdGlvbj47XG4gICAgbm90aWZpY2F0aW9uOiBhbnk7XG4gICAgbm90aWZpY2F0aW9uSUQ6IHN0cmluZztcbiAgICBub3RpZmljYXRpb25DbGFzczogYm9vbGVhbjtcbiAgICByb2xlOiBzdHJpbmc7XG4gICAgcmVhZG9ubHkgaXNFcnJvcjogYm9vbGVhbjtcbiAgICByZWFkb25seSBpc0luZm86IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgaXNTdWNjZXNzOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGlzV2FybmluZzogYm9vbGVhbjtcbiAgICByZWFkb25seSBpc0xvd0NvbnRyYXN0OiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGlzQ2xvc2VIaWRkZW46IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIGRlZmF1bHROb3RpZmljYXRpb25PYmo6IHtcbiAgICAgICAgdGl0bGU6IHN0cmluZztcbiAgICAgICAgbWVzc2FnZTogc3RyaW5nO1xuICAgICAgICB0eXBlOiBzdHJpbmc7XG4gICAgICAgIHNob3dDbG9zZTogYm9vbGVhbjtcbiAgICAgICAgY2xvc2VMYWJlbDogYW55O1xuICAgIH07XG4gICAgcHJvdGVjdGVkIF9ub3RpZmljYXRpb25PYmo6IE5vdGlmaWNhdGlvbkNvbnRlbnQ7XG4gICAgY29uc3RydWN0b3Iobm90aWZpY2F0aW9uRGlzcGxheVNlcnZpY2U6IE5vdGlmaWNhdGlvbkRpc3BsYXlTZXJ2aWNlLCBpMThuOiBJMThuKTtcbiAgICAvKipcbiAgICAgKiBFbWl0cyBjbG9zZSBldmVudC5cbiAgICAgKi9cbiAgICBvbkNsb3NlKCk6IHZvaWQ7XG4gICAgb25DbGljayhhY3Rpb246IGFueSwgZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgZGVzdHJveSgpOiB2b2lkO1xufVxuIl19