/**
 *
 * carbon-angular v0.0.0 | pagination-overflow.component.js
 *
 * Copyright 2014, 2022 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, Output, EventEmitter } from "@angular/core";
import { I18n } from "carbon-components-angular/i18n";
/**
 * Used to present a selection of pages when there is an overflow
 * in the pagination list
 *
 * * ```html
 * <ibm-pagination-overflow [fromIndex]="5" [count]="30" (change)="handleChange(value)"></ibm-pagination-overflow>
 * ```
 */
export class PaginationOverflow {
    constructor(i18n) {
        this.i18n = i18n;
        this.ariaLabel = this.i18n.get().PAGINATION.SELECT_ARIA;
        /**
         * Emits click event
         */
        this.change = new EventEmitter();
    }
    get countAsArray() {
        return [...Array(this.count)];
    }
    handleChange(event) {
        this.change.emit(+event.target.value);
        event.target.value = "";
    }
}
PaginationOverflow.decorators = [
    { type: Component, args: [{
                selector: "ibm-pagination-overflow",
                template: `
		<li class="bx--pagination-nav__list-item" *ngIf="count > 1">
			<div class="bx--pagination-nav__select">
			<select
				[attr.aria-label]="ariaLabel"
				class="bx--pagination-nav__page bx--pagination-nav__page--select"
				(change)="handleChange($event)">
				<option value="" hidden></option>
				<option
				*ngFor="let item of countAsArray; let i = index">
					{{fromIndex + i + 1}}
				</option>
			</select>
			<div class="bx--pagination-nav__select-icon-wrapper">
				<svg
					ibmIcon="overflow-menu--horizontal"
					size="16"
					style="display: inherit"
					class="bx--pagination-nav__select-icon">
				</svg>
			</div>
			</div>
		</li>
		<ibm-pagination-nav-item *ngIf="count === 1" [page]="fromIndex + 1"></ibm-pagination-nav-item>
	`
            }] }
];
/** @nocollapse */
PaginationOverflow.ctorParameters = () => [
    { type: I18n }
];
PaginationOverflow.propDecorators = {
    fromIndex: [{ type: Input }],
    count: [{ type: Input }],
    ariaLabel: [{ type: Input }],
    change: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdGlvbi1vdmVyZmxvdy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL3BhZ2luYXRpb24vIiwic291cmNlcyI6WyJwYWdpbmF0aW9uLW5hdi9wYWdpbmF0aW9uLW92ZXJmbG93LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULEtBQUssRUFDTCxNQUFNLEVBQ04sWUFBWSxFQUNaLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUV0RDs7Ozs7OztHQU9HO0FBNkJILE1BQU0sT0FBTyxrQkFBa0I7SUFtQjlCLFlBQXNCLElBQVU7UUFBVixTQUFJLEdBQUosSUFBSSxDQUFNO1FBWHZCLGNBQVMsR0FBVyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUM7UUFFcEU7O1dBRUc7UUFDTyxXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztJQU1YLENBQUM7SUFKcEMsSUFBSSxZQUFZO1FBQ2YsT0FBTyxDQUFDLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFJRCxZQUFZLENBQUMsS0FBSztRQUNqQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdEMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQ3pCLENBQUM7OztZQXBERCxTQUFTLFNBQUM7Z0JBQ1YsUUFBUSxFQUFFLHlCQUF5QjtnQkFDbkMsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUF3QlQ7YUFDRDs7OztZQXJDUSxJQUFJOzs7d0JBMENYLEtBQUs7b0JBRUwsS0FBSzt3QkFFTCxLQUFLO3FCQUtMLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRDb21wb25lbnQsXG5cdElucHV0LFxuXHRPdXRwdXQsXG5cdEV2ZW50RW1pdHRlclxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgSTE4biB9IGZyb20gXCJjYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2kxOG5cIjtcblxuLyoqXG4gKiBVc2VkIHRvIHByZXNlbnQgYSBzZWxlY3Rpb24gb2YgcGFnZXMgd2hlbiB0aGVyZSBpcyBhbiBvdmVyZmxvd1xuICogaW4gdGhlIHBhZ2luYXRpb24gbGlzdFxuICpcbiAqICogYGBgaHRtbFxuICogPGlibS1wYWdpbmF0aW9uLW92ZXJmbG93IFtmcm9tSW5kZXhdPVwiNVwiIFtjb3VudF09XCIzMFwiIChjaGFuZ2UpPVwiaGFuZGxlQ2hhbmdlKHZhbHVlKVwiPjwvaWJtLXBhZ2luYXRpb24tb3ZlcmZsb3c+XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiBcImlibS1wYWdpbmF0aW9uLW92ZXJmbG93XCIsXG5cdHRlbXBsYXRlOiBgXG5cdFx0PGxpIGNsYXNzPVwiYngtLXBhZ2luYXRpb24tbmF2X19saXN0LWl0ZW1cIiAqbmdJZj1cImNvdW50ID4gMVwiPlxuXHRcdFx0PGRpdiBjbGFzcz1cImJ4LS1wYWdpbmF0aW9uLW5hdl9fc2VsZWN0XCI+XG5cdFx0XHQ8c2VsZWN0XG5cdFx0XHRcdFthdHRyLmFyaWEtbGFiZWxdPVwiYXJpYUxhYmVsXCJcblx0XHRcdFx0Y2xhc3M9XCJieC0tcGFnaW5hdGlvbi1uYXZfX3BhZ2UgYngtLXBhZ2luYXRpb24tbmF2X19wYWdlLS1zZWxlY3RcIlxuXHRcdFx0XHQoY2hhbmdlKT1cImhhbmRsZUNoYW5nZSgkZXZlbnQpXCI+XG5cdFx0XHRcdDxvcHRpb24gdmFsdWU9XCJcIiBoaWRkZW4+PC9vcHRpb24+XG5cdFx0XHRcdDxvcHRpb25cblx0XHRcdFx0Km5nRm9yPVwibGV0IGl0ZW0gb2YgY291bnRBc0FycmF5OyBsZXQgaSA9IGluZGV4XCI+XG5cdFx0XHRcdFx0e3tmcm9tSW5kZXggKyBpICsgMX19XG5cdFx0XHRcdDwvb3B0aW9uPlxuXHRcdFx0PC9zZWxlY3Q+XG5cdFx0XHQ8ZGl2IGNsYXNzPVwiYngtLXBhZ2luYXRpb24tbmF2X19zZWxlY3QtaWNvbi13cmFwcGVyXCI+XG5cdFx0XHRcdDxzdmdcblx0XHRcdFx0XHRpYm1JY29uPVwib3ZlcmZsb3ctbWVudS0taG9yaXpvbnRhbFwiXG5cdFx0XHRcdFx0c2l6ZT1cIjE2XCJcblx0XHRcdFx0XHRzdHlsZT1cImRpc3BsYXk6IGluaGVyaXRcIlxuXHRcdFx0XHRcdGNsYXNzPVwiYngtLXBhZ2luYXRpb24tbmF2X19zZWxlY3QtaWNvblwiPlxuXHRcdFx0XHQ8L3N2Zz5cblx0XHRcdDwvZGl2PlxuXHRcdFx0PC9kaXY+XG5cdFx0PC9saT5cblx0XHQ8aWJtLXBhZ2luYXRpb24tbmF2LWl0ZW0gKm5nSWY9XCJjb3VudCA9PT0gMVwiIFtwYWdlXT1cImZyb21JbmRleCArIDFcIj48L2libS1wYWdpbmF0aW9uLW5hdi1pdGVtPlxuXHRgXG59KVxuZXhwb3J0IGNsYXNzIFBhZ2luYXRpb25PdmVyZmxvdyB7XG5cdC8qKlxuXHQgKiBUaGUgcGFnZSBmb3IgdGhpcyBjb21wb25lbnQgdG8gZGlwc2xheVxuXHQgKi9cblx0QElucHV0KCkgZnJvbUluZGV4OiBudW1iZXI7XG5cblx0QElucHV0KCkgY291bnQ6IG51bWJlcjtcblxuXHRASW5wdXQoKSBhcmlhTGFiZWw6IHN0cmluZyA9IHRoaXMuaTE4bi5nZXQoKS5QQUdJTkFUSU9OLlNFTEVDVF9BUklBO1xuXG5cdC8qKlxuXHQgKiBFbWl0cyBjbGljayBldmVudFxuXHQgKi9cblx0QE91dHB1dCgpIGNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8bnVtYmVyPigpO1xuXG5cdGdldCBjb3VudEFzQXJyYXkoKSB7XG5cdFx0cmV0dXJuIFsuLi5BcnJheSh0aGlzLmNvdW50KV07XG5cdH1cblxuXHRjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgaTE4bjogSTE4bikge31cblxuXHRoYW5kbGVDaGFuZ2UoZXZlbnQpIHtcblx0XHR0aGlzLmNoYW5nZS5lbWl0KCtldmVudC50YXJnZXQudmFsdWUpO1xuXHRcdGV2ZW50LnRhcmdldC52YWx1ZSA9IFwiXCI7XG5cdH1cbn1cbiJdfQ==