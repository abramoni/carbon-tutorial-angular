/**
 *
 * carbon-angular v0.0.0 | timepicker.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter, TemplateRef } from "@angular/core";
import { ControlValueAccessor } from "@angular/forms";
/**
 * [See demo](../../?path=/story/components-time-picker--simple)
 *
 * <example-url>../../iframe.html?id=components-time-picker--simple</example-url>
 */
import * as ɵngcc0 from '@angular/core';
export declare class TimePicker implements ControlValueAccessor {
    /**
     * Tracks the total number of selects instantiated. Used to generate unique IDs
     */
    static timePickerCount: number;
    invalid: boolean;
    invalidText: string | TemplateRef<any>;
    label: string | TemplateRef<any>;
    placeholder: string;
    pattern: string;
    id: string;
    disabled: boolean;
    value: string;
    /**
     * Set to true for a loading select.
     */
    skeleton: boolean;
    /**
     * `light` or `dark` select theme
     */
    theme: "light" | "dark";
    valueChange: EventEmitter<string>;
    writeValue(value: string): void;
    registerOnChange(callback: any): void;
    registerOnTouched(callback: any): void;
    setDisabledState(isDisabled: boolean): void;
    onChange(event: any): void;
    focusOut(): void;
    isTemplate(value: any): boolean;
    protected onChangeHandler: (_: any) => void;
    protected onTouchedHandler: () => void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TimePicker>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TimePicker, "ibm-timepicker", never, {
    "invalid": "invalid";
    "placeholder": "placeholder";
    "pattern": "pattern";
    "id": "id";
    "disabled": "disabled";
    "skeleton": "skeleton";
    "theme": "theme";
    "value": "value";
    "invalidText": "invalidText";
    "label": "label";
}, {
    "valueChange": "valueChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZXBpY2tlci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidGltZXBpY2tlci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQStCQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICpcbiAqIGNhcmJvbi1hbmd1bGFyIHYwLjAuMCB8IHRpbWVwaWNrZXIuY29tcG9uZW50LmQudHNcbiAqXG4gKiBDb3B5cmlnaHQgMjAxNCwgMjAyMSBJQk1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5cbmltcG9ydCB7IEV2ZW50RW1pdHRlciwgVGVtcGxhdGVSZWYgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcbi8qKlxuICogW1NlZSBkZW1vXSguLi8uLi8/cGF0aD0vc3RvcnkvY29tcG9uZW50cy10aW1lLXBpY2tlci0tc2ltcGxlKVxuICpcbiAqIDxleGFtcGxlLXVybD4uLi8uLi9pZnJhbWUuaHRtbD9pZD1jb21wb25lbnRzLXRpbWUtcGlja2VyLS1zaW1wbGU8L2V4YW1wbGUtdXJsPlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUaW1lUGlja2VyIGltcGxlbWVudHMgQ29udHJvbFZhbHVlQWNjZXNzb3Ige1xuICAgIC8qKlxuICAgICAqIFRyYWNrcyB0aGUgdG90YWwgbnVtYmVyIG9mIHNlbGVjdHMgaW5zdGFudGlhdGVkLiBVc2VkIHRvIGdlbmVyYXRlIHVuaXF1ZSBJRHNcbiAgICAgKi9cbiAgICBzdGF0aWMgdGltZVBpY2tlckNvdW50OiBudW1iZXI7XG4gICAgaW52YWxpZDogYm9vbGVhbjtcbiAgICBpbnZhbGlkVGV4dDogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55PjtcbiAgICBsYWJlbDogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55PjtcbiAgICBwbGFjZWhvbGRlcjogc3RyaW5nO1xuICAgIHBhdHRlcm46IHN0cmluZztcbiAgICBpZDogc3RyaW5nO1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIHZhbHVlOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogU2V0IHRvIHRydWUgZm9yIGEgbG9hZGluZyBzZWxlY3QuXG4gICAgICovXG4gICAgc2tlbGV0b246IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogYGxpZ2h0YCBvciBgZGFya2Agc2VsZWN0IHRoZW1lXG4gICAgICovXG4gICAgdGhlbWU6IFwibGlnaHRcIiB8IFwiZGFya1wiO1xuICAgIHZhbHVlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8c3RyaW5nPjtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBzdHJpbmcpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25DaGFuZ2UoY2FsbGJhY2s6IGFueSk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPblRvdWNoZWQoY2FsbGJhY2s6IGFueSk6IHZvaWQ7XG4gICAgc2V0RGlzYWJsZWRTdGF0ZShpc0Rpc2FibGVkOiBib29sZWFuKTogdm9pZDtcbiAgICBvbkNoYW5nZShldmVudDogYW55KTogdm9pZDtcbiAgICBmb2N1c091dCgpOiB2b2lkO1xuICAgIGlzVGVtcGxhdGUodmFsdWU6IGFueSk6IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIG9uQ2hhbmdlSGFuZGxlcjogKF86IGFueSkgPT4gdm9pZDtcbiAgICBwcm90ZWN0ZWQgb25Ub3VjaGVkSGFuZGxlcjogKCkgPT4gdm9pZDtcbn1cbiJdfQ==