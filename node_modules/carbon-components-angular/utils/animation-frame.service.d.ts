/**
 *
 * carbon-angular v0.0.0 | animation-frame.service.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { OnDestroy, NgZone } from "@angular/core";
import { Observable, Subject } from "rxjs";
import * as ɵngcc0 from '@angular/core';
export declare class AnimationFrameServiceSingleton implements OnDestroy {
    protected ngZone: NgZone;
    tick: Observable<number>;
    protected frameSource: Subject<number>;
    protected animationFrameId: number;
    constructor(ngZone: NgZone);
    ngOnDestroy(): void;
    protected doTick(frame: number): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AnimationFrameServiceSingleton>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<AnimationFrameServiceSingleton>;
}
export declare class AnimationFrameService {
    protected singleton: AnimationFrameServiceSingleton;
    tick: Observable<number>;
    constructor(singleton: AnimationFrameServiceSingleton);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AnimationFrameService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<AnimationFrameService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0aW9uLWZyYW1lLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsiYW5pbWF0aW9uLWZyYW1lLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQkE7Ozs7Ozs7Ozs7QUFRQTs7Ozs7OztBQUtBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogY2FyYm9uLWFuZ3VsYXIgdjAuMC4wIHwgYW5pbWF0aW9uLWZyYW1lLnNlcnZpY2UuZC50c1xuICpcbiAqIENvcHlyaWdodCAyMDE0LCAyMDIxIElCTVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cblxuaW1wb3J0IHsgT25EZXN0cm95LCBOZ1pvbmUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3ViamVjdCB9IGZyb20gXCJyeGpzXCI7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBbmltYXRpb25GcmFtZVNlcnZpY2VTaW5nbGV0b24gaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICAgIHByb3RlY3RlZCBuZ1pvbmU6IE5nWm9uZTtcbiAgICB0aWNrOiBPYnNlcnZhYmxlPG51bWJlcj47XG4gICAgcHJvdGVjdGVkIGZyYW1lU291cmNlOiBTdWJqZWN0PG51bWJlcj47XG4gICAgcHJvdGVjdGVkIGFuaW1hdGlvbkZyYW1lSWQ6IG51bWJlcjtcbiAgICBjb25zdHJ1Y3RvcihuZ1pvbmU6IE5nWm9uZSk7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgZG9UaWNrKGZyYW1lOiBudW1iZXIpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQW5pbWF0aW9uRnJhbWVTZXJ2aWNlIHtcbiAgICBwcm90ZWN0ZWQgc2luZ2xldG9uOiBBbmltYXRpb25GcmFtZVNlcnZpY2VTaW5nbGV0b247XG4gICAgdGljazogT2JzZXJ2YWJsZTxudW1iZXI+O1xuICAgIGNvbnN0cnVjdG9yKHNpbmdsZXRvbjogQW5pbWF0aW9uRnJhbWVTZXJ2aWNlU2luZ2xldG9uKTtcbn1cbiJdfQ==