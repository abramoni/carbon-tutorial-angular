/**
 *
 * carbon-angular v0.0.0 | header-item.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter } from "@angular/core";
import { DomSanitizer } from "@angular/platform-browser";
import { Router } from "@angular/router";
/**
 * Individual item in the header. May be used a direct child of `HeaderNavigation` or `HeaderMenu`
 */
import * as ɵngcc0 from '@angular/core';
export declare class HeaderItem {
    protected domSanitizer: DomSanitizer;
    protected router: Router;
    href: string;
    /**
     * Use the routerLink attribute on <a> tag for navigation instead of using event handlers
     */
    useRouter: boolean;
    /**
     * String or array of string class names to apply when active
     */
    activeLinkClass: string | string[];
    /**
     * Applies selected styles to the item if a user sets this to true.
     */
    isCurrentPage: boolean;
    /**
     * Array of commands to send to the router when the link is activated
     * See: https://angular.io/api/router/Router#navigate
     */
    route: any[];
    /**
     * Router options. Used in conjunction with `route`
     * See: https://angular.io/api/router/Router#navigate
     */
    routeExtras: any;
    /**
     * Emits the navigation status promise when the link is activated
     */
    navigation: EventEmitter<Promise<boolean>>;
    protected _href: string;
    constructor(domSanitizer: DomSanitizer, router: Router);
    navigate(event: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<HeaderItem>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<HeaderItem, "ibm-header-item", never, {
    "useRouter": "useRouter";
    "href": "href";
    "activeLinkClass": "activeLinkClass";
    "isCurrentPage": "isCurrentPage";
    "route": "route";
    "routeExtras": "routeExtras";
}, {
    "navigation": "navigation";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLWl0ZW0uY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImhlYWRlci1pdGVtLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEwQkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogY2FyYm9uLWFuZ3VsYXIgdjAuMC4wIHwgaGVhZGVyLWl0ZW0uY29tcG9uZW50LmQudHNcbiAqXG4gKiBDb3B5cmlnaHQgMjAxNCwgMjAyMSBJQk1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5cbmltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBEb21TYW5pdGl6ZXIgfSBmcm9tIFwiQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3NlclwiO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xuLyoqXG4gKiBJbmRpdmlkdWFsIGl0ZW0gaW4gdGhlIGhlYWRlci4gTWF5IGJlIHVzZWQgYSBkaXJlY3QgY2hpbGQgb2YgYEhlYWRlck5hdmlnYXRpb25gIG9yIGBIZWFkZXJNZW51YFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBIZWFkZXJJdGVtIHtcbiAgICBwcm90ZWN0ZWQgZG9tU2FuaXRpemVyOiBEb21TYW5pdGl6ZXI7XG4gICAgcHJvdGVjdGVkIHJvdXRlcjogUm91dGVyO1xuICAgIGhyZWY6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBVc2UgdGhlIHJvdXRlckxpbmsgYXR0cmlidXRlIG9uIDxhPiB0YWcgZm9yIG5hdmlnYXRpb24gaW5zdGVhZCBvZiB1c2luZyBldmVudCBoYW5kbGVyc1xuICAgICAqL1xuICAgIHVzZVJvdXRlcjogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBTdHJpbmcgb3IgYXJyYXkgb2Ygc3RyaW5nIGNsYXNzIG5hbWVzIHRvIGFwcGx5IHdoZW4gYWN0aXZlXG4gICAgICovXG4gICAgYWN0aXZlTGlua0NsYXNzOiBzdHJpbmcgfCBzdHJpbmdbXTtcbiAgICAvKipcbiAgICAgKiBBcHBsaWVzIHNlbGVjdGVkIHN0eWxlcyB0byB0aGUgaXRlbSBpZiBhIHVzZXIgc2V0cyB0aGlzIHRvIHRydWUuXG4gICAgICovXG4gICAgaXNDdXJyZW50UGFnZTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBBcnJheSBvZiBjb21tYW5kcyB0byBzZW5kIHRvIHRoZSByb3V0ZXIgd2hlbiB0aGUgbGluayBpcyBhY3RpdmF0ZWRcbiAgICAgKiBTZWU6IGh0dHBzOi8vYW5ndWxhci5pby9hcGkvcm91dGVyL1JvdXRlciNuYXZpZ2F0ZVxuICAgICAqL1xuICAgIHJvdXRlOiBhbnlbXTtcbiAgICAvKipcbiAgICAgKiBSb3V0ZXIgb3B0aW9ucy4gVXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIGByb3V0ZWBcbiAgICAgKiBTZWU6IGh0dHBzOi8vYW5ndWxhci5pby9hcGkvcm91dGVyL1JvdXRlciNuYXZpZ2F0ZVxuICAgICAqL1xuICAgIHJvdXRlRXh0cmFzOiBhbnk7XG4gICAgLyoqXG4gICAgICogRW1pdHMgdGhlIG5hdmlnYXRpb24gc3RhdHVzIHByb21pc2Ugd2hlbiB0aGUgbGluayBpcyBhY3RpdmF0ZWRcbiAgICAgKi9cbiAgICBuYXZpZ2F0aW9uOiBFdmVudEVtaXR0ZXI8UHJvbWlzZTxib29sZWFuPj47XG4gICAgcHJvdGVjdGVkIF9ocmVmOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IoZG9tU2FuaXRpemVyOiBEb21TYW5pdGl6ZXIsIHJvdXRlcjogUm91dGVyKTtcbiAgICBuYXZpZ2F0ZShldmVudDogYW55KTogdm9pZDtcbn1cbiJdfQ==