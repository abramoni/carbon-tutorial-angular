/**
 *
 * carbon-angular v0.0.0 | switcher-list-item.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter } from "@angular/core";
import { DomSanitizer } from "@angular/platform-browser";
import { Router } from "@angular/router";
/**
 * Represents an item in a switcher list.
 */
import * as ɵngcc0 from '@angular/core';
export declare class SwitcherListItem {
    protected domSanitizer: DomSanitizer;
    protected router: Router;
    /**
     * Enables the "active" state for an item. Commonly used to indicate the current page or selection.
     */
    active: boolean;
    /**
     * Array of commands to send to the router when the link is activated
     * See: https://angular.io/api/router/Router#navigate
     */
    route: any[];
    /**
     * Router options. Used in conjunction with `route`
     * See: https://angular.io/api/router/Router#navigate
     */
    routeExtras: any;
    /**
     * Optional link for the underlying anchor.
     */
    href: string;
    /**
     * Emits the navigation status promise when the link is activated
     */
    navigation: EventEmitter<Promise<boolean>>;
    /**
     * Optional target for the underlying anchor.
     */
    target: string;
    itemClass: boolean;
    itemRole: string;
    protected _href: string;
    protected _target: string;
    constructor(domSanitizer: DomSanitizer, router: Router);
    navigate(event: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SwitcherListItem>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SwitcherListItem, "ibm-switcher-list-item", never, {
    "active": "active";
    "href": "href";
    "target": "target";
    "route": "route";
    "routeExtras": "routeExtras";
}, {
    "navigation": "navigation";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dpdGNoZXItbGlzdC1pdGVtLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzd2l0Y2hlci1saXN0LWl0ZW0uY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTBCQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogY2FyYm9uLWFuZ3VsYXIgdjAuMC4wIHwgc3dpdGNoZXItbGlzdC1pdGVtLmNvbXBvbmVudC5kLnRzXG4gKlxuICogQ29weXJpZ2h0IDIwMTQsIDIwMjEgSUJNXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgRG9tU2FuaXRpemVyIH0gZnJvbSBcIkBhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXJcIjtcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJAYW5ndWxhci9yb3V0ZXJcIjtcbi8qKlxuICogUmVwcmVzZW50cyBhbiBpdGVtIGluIGEgc3dpdGNoZXIgbGlzdC5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU3dpdGNoZXJMaXN0SXRlbSB7XG4gICAgcHJvdGVjdGVkIGRvbVNhbml0aXplcjogRG9tU2FuaXRpemVyO1xuICAgIHByb3RlY3RlZCByb3V0ZXI6IFJvdXRlcjtcbiAgICAvKipcbiAgICAgKiBFbmFibGVzIHRoZSBcImFjdGl2ZVwiIHN0YXRlIGZvciBhbiBpdGVtLiBDb21tb25seSB1c2VkIHRvIGluZGljYXRlIHRoZSBjdXJyZW50IHBhZ2Ugb3Igc2VsZWN0aW9uLlxuICAgICAqL1xuICAgIGFjdGl2ZTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBBcnJheSBvZiBjb21tYW5kcyB0byBzZW5kIHRvIHRoZSByb3V0ZXIgd2hlbiB0aGUgbGluayBpcyBhY3RpdmF0ZWRcbiAgICAgKiBTZWU6IGh0dHBzOi8vYW5ndWxhci5pby9hcGkvcm91dGVyL1JvdXRlciNuYXZpZ2F0ZVxuICAgICAqL1xuICAgIHJvdXRlOiBhbnlbXTtcbiAgICAvKipcbiAgICAgKiBSb3V0ZXIgb3B0aW9ucy4gVXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIGByb3V0ZWBcbiAgICAgKiBTZWU6IGh0dHBzOi8vYW5ndWxhci5pby9hcGkvcm91dGVyL1JvdXRlciNuYXZpZ2F0ZVxuICAgICAqL1xuICAgIHJvdXRlRXh0cmFzOiBhbnk7XG4gICAgLyoqXG4gICAgICogT3B0aW9uYWwgbGluayBmb3IgdGhlIHVuZGVybHlpbmcgYW5jaG9yLlxuICAgICAqL1xuICAgIGhyZWY6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBFbWl0cyB0aGUgbmF2aWdhdGlvbiBzdGF0dXMgcHJvbWlzZSB3aGVuIHRoZSBsaW5rIGlzIGFjdGl2YXRlZFxuICAgICAqL1xuICAgIG5hdmlnYXRpb246IEV2ZW50RW1pdHRlcjxQcm9taXNlPGJvb2xlYW4+PjtcbiAgICAvKipcbiAgICAgKiBPcHRpb25hbCB0YXJnZXQgZm9yIHRoZSB1bmRlcmx5aW5nIGFuY2hvci5cbiAgICAgKi9cbiAgICB0YXJnZXQ6IHN0cmluZztcbiAgICBpdGVtQ2xhc3M6IGJvb2xlYW47XG4gICAgaXRlbVJvbGU6IHN0cmluZztcbiAgICBwcm90ZWN0ZWQgX2hyZWY6IHN0cmluZztcbiAgICBwcm90ZWN0ZWQgX3RhcmdldDogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKGRvbVNhbml0aXplcjogRG9tU2FuaXRpemVyLCByb3V0ZXI6IFJvdXRlcik7XG4gICAgbmF2aWdhdGUoZXZlbnQ6IGFueSk6IHZvaWQ7XG59XG4iXX0=