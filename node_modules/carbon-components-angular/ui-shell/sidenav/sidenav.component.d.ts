/**
 *
 * carbon-angular v0.0.0 | sidenav.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { I18n } from "carbon-components-angular/i18n";
import { NavigationItem } from "../header/header-navigation-items.interface";
/**
 * `Sidenav` is a fixed left navigation that may contain `SideNavItem`s or `SideNavMenu`s
 *
 * [See demo](../../?path=/story/components-ui-shell--side-navigation)
 *
 * <example-url>../../iframe.html?id=components-ui-shell--side-navigation</example-url>
 */
import * as ɵngcc0 from '@angular/core';
export declare class SideNav {
    i18n: I18n;
    role: string;
    hostClass: boolean;
    ariaLabel: string;
    /**
     * Controls the expanded (`true`) or collapsed (`false`) state when on a small screen.
     */
    expanded: boolean;
    /**
     * Controls the hidden (`true`) or visible (`false`) state
     */
    hidden: boolean;
    rail: boolean;
    ux: boolean;
    allowExpansion: boolean;
    /**
     * NavigationItems from the header navigation component which are displayed on the sidenav when the window
     * innerWidth is small enough. Sidenav items and menus are created using the model used to create header
     * navigation items.
     */
    navigationItems: NavigationItem[];
    constructor(i18n: I18n);
    toggle(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SideNav>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SideNav, "ibm-sidenav", never, {
    "ariaLabel": "ariaLabel";
    "expanded": "expanded";
    "hidden": "hidden";
    "rail": "rail";
    "allowExpansion": "allowExpansion";
    "navigationItems": "navigationItems";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZW5hdi5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsic2lkZW5hdi5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNkJBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3QkEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqXG4gKiBjYXJib24tYW5ndWxhciB2MC4wLjAgfCBzaWRlbmF2LmNvbXBvbmVudC5kLnRzXG4gKlxuICogQ29weXJpZ2h0IDIwMTQsIDIwMjEgSUJNXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuXG5pbXBvcnQgeyBJMThuIH0gZnJvbSBcImNhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvaTE4blwiO1xuaW1wb3J0IHsgTmF2aWdhdGlvbkl0ZW0gfSBmcm9tIFwiLi4vaGVhZGVyL2hlYWRlci1uYXZpZ2F0aW9uLWl0ZW1zLmludGVyZmFjZVwiO1xuLyoqXG4gKiBgU2lkZW5hdmAgaXMgYSBmaXhlZCBsZWZ0IG5hdmlnYXRpb24gdGhhdCBtYXkgY29udGFpbiBgU2lkZU5hdkl0ZW1gcyBvciBgU2lkZU5hdk1lbnVgc1xuICpcbiAqIFtTZWUgZGVtb10oLi4vLi4vP3BhdGg9L3N0b3J5L2NvbXBvbmVudHMtdWktc2hlbGwtLXNpZGUtbmF2aWdhdGlvbilcbiAqXG4gKiA8ZXhhbXBsZS11cmw+Li4vLi4vaWZyYW1lLmh0bWw/aWQ9Y29tcG9uZW50cy11aS1zaGVsbC0tc2lkZS1uYXZpZ2F0aW9uPC9leGFtcGxlLXVybD5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2lkZU5hdiB7XG4gICAgaTE4bjogSTE4bjtcbiAgICByb2xlOiBzdHJpbmc7XG4gICAgaG9zdENsYXNzOiBib29sZWFuO1xuICAgIGFyaWFMYWJlbDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIENvbnRyb2xzIHRoZSBleHBhbmRlZCAoYHRydWVgKSBvciBjb2xsYXBzZWQgKGBmYWxzZWApIHN0YXRlIHdoZW4gb24gYSBzbWFsbCBzY3JlZW4uXG4gICAgICovXG4gICAgZXhwYW5kZWQ6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQ29udHJvbHMgdGhlIGhpZGRlbiAoYHRydWVgKSBvciB2aXNpYmxlIChgZmFsc2VgKSBzdGF0ZVxuICAgICAqL1xuICAgIGhpZGRlbjogYm9vbGVhbjtcbiAgICByYWlsOiBib29sZWFuO1xuICAgIHV4OiBib29sZWFuO1xuICAgIGFsbG93RXhwYW5zaW9uOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIE5hdmlnYXRpb25JdGVtcyBmcm9tIHRoZSBoZWFkZXIgbmF2aWdhdGlvbiBjb21wb25lbnQgd2hpY2ggYXJlIGRpc3BsYXllZCBvbiB0aGUgc2lkZW5hdiB3aGVuIHRoZSB3aW5kb3dcbiAgICAgKiBpbm5lcldpZHRoIGlzIHNtYWxsIGVub3VnaC4gU2lkZW5hdiBpdGVtcyBhbmQgbWVudXMgYXJlIGNyZWF0ZWQgdXNpbmcgdGhlIG1vZGVsIHVzZWQgdG8gY3JlYXRlIGhlYWRlclxuICAgICAqIG5hdmlnYXRpb24gaXRlbXMuXG4gICAgICovXG4gICAgbmF2aWdhdGlvbkl0ZW1zOiBOYXZpZ2F0aW9uSXRlbVtdO1xuICAgIGNvbnN0cnVjdG9yKGkxOG46IEkxOG4pO1xuICAgIHRvZ2dsZSgpOiB2b2lkO1xufVxuIl19