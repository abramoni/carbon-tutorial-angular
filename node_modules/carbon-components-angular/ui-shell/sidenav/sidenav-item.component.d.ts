/**
 *
 * carbon-angular v0.0.0 | sidenav-item.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { EventEmitter, OnChanges } from "@angular/core";
import { DomSanitizer } from "@angular/platform-browser";
import { Router } from "@angular/router";
/**
 * `SideNavItem` can either be a child of `SideNav` or `SideNavMenu`
 */
import * as ɵngcc0 from '@angular/core';
export declare class SideNavItem implements OnChanges {
    protected domSanitizer: DomSanitizer;
    protected router: Router;
    /**
     * Link for the item. NOTE: *do not* pass unsafe or untrusted values, this has the potential to open you up to XSS attacks
     */
    href: string;
    /**
     * Toggles the active (current page) state for the link.
     */
    active: boolean;
    /**
     * Array of commands to send to the router when the link is activated
     * See: https://angular.io/api/router/Router#navigate
     */
    route: any[];
    isSubMenu: boolean;
    /**
     * Router options. Used in conjunction with `route`
     * See: https://angular.io/api/router/Router#navigate
     */
    routeExtras: any;
    /**
     * Title attribute of the anchor element.
     */
    title: string;
    /**
     * Emits the navigation status promise when the link is activated
     */
    navigation: EventEmitter<Promise<boolean>>;
    /**
     * Emits when `active` input is changed. This is mainly used to indicate to any parent menu items that a
     * child sidenav item is active or not active.
     */
    selected: EventEmitter<boolean>;
    protected _href: string;
    constructor(domSanitizer: DomSanitizer, router: Router);
    ngOnChanges(changes: any): void;
    navigate(event: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SideNavItem>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SideNavItem, "ibm-sidenav-item", never, {
    "active": "active";
    "isSubMenu": "isSubMenu";
    "href": "href";
    "route": "route";
    "routeExtras": "routeExtras";
    "title": "title";
}, {
    "navigation": "navigation";
    "selected": "selected";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZW5hdi1pdGVtLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzaWRlbmF2LWl0ZW0uY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTBCQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogY2FyYm9uLWFuZ3VsYXIgdjAuMC4wIHwgc2lkZW5hdi1pdGVtLmNvbXBvbmVudC5kLnRzXG4gKlxuICogQ29weXJpZ2h0IDIwMTQsIDIwMjEgSUJNXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcyB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBEb21TYW5pdGl6ZXIgfSBmcm9tIFwiQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3NlclwiO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xuLyoqXG4gKiBgU2lkZU5hdkl0ZW1gIGNhbiBlaXRoZXIgYmUgYSBjaGlsZCBvZiBgU2lkZU5hdmAgb3IgYFNpZGVOYXZNZW51YFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTaWRlTmF2SXRlbSBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gICAgcHJvdGVjdGVkIGRvbVNhbml0aXplcjogRG9tU2FuaXRpemVyO1xuICAgIHByb3RlY3RlZCByb3V0ZXI6IFJvdXRlcjtcbiAgICAvKipcbiAgICAgKiBMaW5rIGZvciB0aGUgaXRlbS4gTk9URTogKmRvIG5vdCogcGFzcyB1bnNhZmUgb3IgdW50cnVzdGVkIHZhbHVlcywgdGhpcyBoYXMgdGhlIHBvdGVudGlhbCB0byBvcGVuIHlvdSB1cCB0byBYU1MgYXR0YWNrc1xuICAgICAqL1xuICAgIGhyZWY6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUb2dnbGVzIHRoZSBhY3RpdmUgKGN1cnJlbnQgcGFnZSkgc3RhdGUgZm9yIHRoZSBsaW5rLlxuICAgICAqL1xuICAgIGFjdGl2ZTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBBcnJheSBvZiBjb21tYW5kcyB0byBzZW5kIHRvIHRoZSByb3V0ZXIgd2hlbiB0aGUgbGluayBpcyBhY3RpdmF0ZWRcbiAgICAgKiBTZWU6IGh0dHBzOi8vYW5ndWxhci5pby9hcGkvcm91dGVyL1JvdXRlciNuYXZpZ2F0ZVxuICAgICAqL1xuICAgIHJvdXRlOiBhbnlbXTtcbiAgICBpc1N1Yk1lbnU6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogUm91dGVyIG9wdGlvbnMuIFVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBgcm91dGVgXG4gICAgICogU2VlOiBodHRwczovL2FuZ3VsYXIuaW8vYXBpL3JvdXRlci9Sb3V0ZXIjbmF2aWdhdGVcbiAgICAgKi9cbiAgICByb3V0ZUV4dHJhczogYW55O1xuICAgIC8qKlxuICAgICAqIFRpdGxlIGF0dHJpYnV0ZSBvZiB0aGUgYW5jaG9yIGVsZW1lbnQuXG4gICAgICovXG4gICAgdGl0bGU6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBFbWl0cyB0aGUgbmF2aWdhdGlvbiBzdGF0dXMgcHJvbWlzZSB3aGVuIHRoZSBsaW5rIGlzIGFjdGl2YXRlZFxuICAgICAqL1xuICAgIG5hdmlnYXRpb246IEV2ZW50RW1pdHRlcjxQcm9taXNlPGJvb2xlYW4+PjtcbiAgICAvKipcbiAgICAgKiBFbWl0cyB3aGVuIGBhY3RpdmVgIGlucHV0IGlzIGNoYW5nZWQuIFRoaXMgaXMgbWFpbmx5IHVzZWQgdG8gaW5kaWNhdGUgdG8gYW55IHBhcmVudCBtZW51IGl0ZW1zIHRoYXQgYVxuICAgICAqIGNoaWxkIHNpZGVuYXYgaXRlbSBpcyBhY3RpdmUgb3Igbm90IGFjdGl2ZS5cbiAgICAgKi9cbiAgICBzZWxlY3RlZDogRXZlbnRFbWl0dGVyPGJvb2xlYW4+O1xuICAgIHByb3RlY3RlZCBfaHJlZjogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKGRvbVNhbml0aXplcjogRG9tU2FuaXRpemVyLCByb3V0ZXI6IFJvdXRlcik7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogYW55KTogdm9pZDtcbiAgICBuYXZpZ2F0ZShldmVudDogYW55KTogdm9pZDtcbn1cbiJdfQ==