/**
 *
 * carbon-angular v0.0.0 | overflow-menu-pane.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { ElementRef, AfterViewInit } from "@angular/core";
import { Dialog } from "../dialog.component";
import { I18n } from "carbon-components-angular/i18n";
import { ExperimentalService } from "carbon-components-angular/experimental";
import { AnimationFrameService, ElementService } from "carbon-components-angular/utils";
/**
 * Extend the `Dialog` component to create an overflow menu.
 *
 * Not used directly. See overflow-menu.component and overflow-menu.directive for more
 */
import * as ɵngcc0 from '@angular/core';
export declare class OverflowMenuPane extends Dialog implements AfterViewInit {
    protected elementRef: ElementRef;
    protected i18n: I18n;
    protected experimental: ExperimentalService;
    protected animationFrameService: AnimationFrameService;
    protected elementService: ElementService;
    constructor(elementRef: ElementRef, i18n: I18n, experimental: ExperimentalService, animationFrameService?: AnimationFrameService, elementService?: ElementService);
    onDialogInit(): void;
    hostkeys(event: KeyboardEvent): void;
    onClose(event: any): void;
    afterDialogViewInit(): void;
    protected listItems(): HTMLElement[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OverflowMenuPane>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<OverflowMenuPane, "ibm-overflow-menu-pane", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcmZsb3ctbWVudS1wYW5lLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJvdmVyZmxvdy1tZW51LXBhbmUuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE4QkE7Ozs7Ozs7Ozs7Ozs7O0FBWUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqXG4gKiBjYXJib24tYW5ndWxhciB2MC4wLjAgfCBvdmVyZmxvdy1tZW51LXBhbmUuY29tcG9uZW50LmQudHNcbiAqXG4gKiBDb3B5cmlnaHQgMjAxNCwgMjAyMSBJQk1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5cbmltcG9ydCB7IEVsZW1lbnRSZWYsIEFmdGVyVmlld0luaXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgRGlhbG9nIH0gZnJvbSBcIi4uL2RpYWxvZy5jb21wb25lbnRcIjtcbmltcG9ydCB7IEkxOG4gfSBmcm9tIFwiY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9pMThuXCI7XG5pbXBvcnQgeyBFeHBlcmltZW50YWxTZXJ2aWNlIH0gZnJvbSBcImNhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvZXhwZXJpbWVudGFsXCI7XG5pbXBvcnQgeyBBbmltYXRpb25GcmFtZVNlcnZpY2UsIEVsZW1lbnRTZXJ2aWNlIH0gZnJvbSBcImNhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvdXRpbHNcIjtcbi8qKlxuICogRXh0ZW5kIHRoZSBgRGlhbG9nYCBjb21wb25lbnQgdG8gY3JlYXRlIGFuIG92ZXJmbG93IG1lbnUuXG4gKlxuICogTm90IHVzZWQgZGlyZWN0bHkuIFNlZSBvdmVyZmxvdy1tZW51LmNvbXBvbmVudCBhbmQgb3ZlcmZsb3ctbWVudS5kaXJlY3RpdmUgZm9yIG1vcmVcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgT3ZlcmZsb3dNZW51UGFuZSBleHRlbmRzIERpYWxvZyBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICAgIHByb3RlY3RlZCBlbGVtZW50UmVmOiBFbGVtZW50UmVmO1xuICAgIHByb3RlY3RlZCBpMThuOiBJMThuO1xuICAgIHByb3RlY3RlZCBleHBlcmltZW50YWw6IEV4cGVyaW1lbnRhbFNlcnZpY2U7XG4gICAgcHJvdGVjdGVkIGFuaW1hdGlvbkZyYW1lU2VydmljZTogQW5pbWF0aW9uRnJhbWVTZXJ2aWNlO1xuICAgIHByb3RlY3RlZCBlbGVtZW50U2VydmljZTogRWxlbWVudFNlcnZpY2U7XG4gICAgY29uc3RydWN0b3IoZWxlbWVudFJlZjogRWxlbWVudFJlZiwgaTE4bjogSTE4biwgZXhwZXJpbWVudGFsOiBFeHBlcmltZW50YWxTZXJ2aWNlLCBhbmltYXRpb25GcmFtZVNlcnZpY2U/OiBBbmltYXRpb25GcmFtZVNlcnZpY2UsIGVsZW1lbnRTZXJ2aWNlPzogRWxlbWVudFNlcnZpY2UpO1xuICAgIG9uRGlhbG9nSW5pdCgpOiB2b2lkO1xuICAgIGhvc3RrZXlzKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcbiAgICBvbkNsb3NlKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGFmdGVyRGlhbG9nVmlld0luaXQoKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgbGlzdEl0ZW1zKCk6IEhUTUxFbGVtZW50W107XG59XG4iXX0=