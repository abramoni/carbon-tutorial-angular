/**
 *
 * carbon-angular v0.0.0 | pagination-overflow.component.js
 *
 * Copyright 2014, 2022 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter } from "@angular/core";
import { I18n } from "carbon-components-angular/i18n";
/**
 * Used to present a selection of pages when there is an overflow
 * in the pagination list
 *
 * * ```html
 * <ibm-pagination-overflow [fromIndex]="5" [count]="30" (change)="handleChange(value)"></ibm-pagination-overflow>
 * ```
 */
var PaginationOverflow = /** @class */ (function () {
    function PaginationOverflow(i18n) {
        this.i18n = i18n;
        this.ariaLabel = this.i18n.get().PAGINATION.SELECT_ARIA;
        /**
         * Emits click event
         */
        this.change = new EventEmitter();
    }
    Object.defineProperty(PaginationOverflow.prototype, "countAsArray", {
        get: function () {
            return tslib_1.__spread(Array(this.count));
        },
        enumerable: true,
        configurable: true
    });
    PaginationOverflow.prototype.handleChange = function (event) {
        this.change.emit(+event.target.value);
        event.target.value = "";
    };
    PaginationOverflow.decorators = [
        { type: Component, args: [{
                    selector: "ibm-pagination-overflow",
                    template: "\n\t\t<li class=\"bx--pagination-nav__list-item\" *ngIf=\"count > 1\">\n\t\t\t<div class=\"bx--pagination-nav__select\">\n\t\t\t<select\n\t\t\t\t[attr.aria-label]=\"ariaLabel\"\n\t\t\t\tclass=\"bx--pagination-nav__page bx--pagination-nav__page--select\"\n\t\t\t\t(change)=\"handleChange($event)\">\n\t\t\t\t<option value=\"\" hidden></option>\n\t\t\t\t<option\n\t\t\t\t*ngFor=\"let item of countAsArray; let i = index\">\n\t\t\t\t\t{{fromIndex + i + 1}}\n\t\t\t\t</option>\n\t\t\t</select>\n\t\t\t<div class=\"bx--pagination-nav__select-icon-wrapper\">\n\t\t\t\t<svg\n\t\t\t\t\tibmIcon=\"overflow-menu--horizontal\"\n\t\t\t\t\tsize=\"16\"\n\t\t\t\t\tstyle=\"display: inherit\"\n\t\t\t\t\tclass=\"bx--pagination-nav__select-icon\">\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</li>\n\t\t<ibm-pagination-nav-item *ngIf=\"count === 1\" [page]=\"fromIndex + 1\"></ibm-pagination-nav-item>\n\t"
                }] }
    ];
    /** @nocollapse */
    PaginationOverflow.ctorParameters = function () { return [
        { type: I18n }
    ]; };
    PaginationOverflow.propDecorators = {
        fromIndex: [{ type: Input }],
        count: [{ type: Input }],
        ariaLabel: [{ type: Input }],
        change: [{ type: Output }]
    };
    return PaginationOverflow;
}());
export { PaginationOverflow };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdGlvbi1vdmVyZmxvdy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL3BhZ2luYXRpb24vIiwic291cmNlcyI6WyJwYWdpbmF0aW9uLW5hdi9wYWdpbmF0aW9uLW92ZXJmbG93LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNOLFNBQVMsRUFDVCxLQUFLLEVBQ0wsTUFBTSxFQUNOLFlBQVksRUFDWixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFdEQ7Ozs7Ozs7R0FPRztBQUNIO0lBK0NDLDRCQUFzQixJQUFVO1FBQVYsU0FBSSxHQUFKLElBQUksQ0FBTTtRQVh2QixjQUFTLEdBQVcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDO1FBRXBFOztXQUVHO1FBQ08sV0FBTSxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7SUFNWCxDQUFDO0lBSnBDLHNCQUFJLDRDQUFZO2FBQWhCO1lBQ0Msd0JBQVcsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUMvQixDQUFDOzs7T0FBQTtJQUlELHlDQUFZLEdBQVosVUFBYSxLQUFLO1FBQ2pCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN0QyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7SUFDekIsQ0FBQzs7Z0JBcERELFNBQVMsU0FBQztvQkFDVixRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxRQUFRLEVBQUUsKzNCQXdCVDtpQkFDRDs7OztnQkFyQ1EsSUFBSTs7OzRCQTBDWCxLQUFLO3dCQUVMLEtBQUs7NEJBRUwsS0FBSzt5QkFLTCxNQUFNOztJQVlSLHlCQUFDO0NBQUEsQUFyREQsSUFxREM7U0F6Qlksa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0Q29tcG9uZW50LFxuXHRJbnB1dCxcblx0T3V0cHV0LFxuXHRFdmVudEVtaXR0ZXJcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEkxOG4gfSBmcm9tIFwiY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9pMThuXCI7XG5cbi8qKlxuICogVXNlZCB0byBwcmVzZW50IGEgc2VsZWN0aW9uIG9mIHBhZ2VzIHdoZW4gdGhlcmUgaXMgYW4gb3ZlcmZsb3dcbiAqIGluIHRoZSBwYWdpbmF0aW9uIGxpc3RcbiAqXG4gKiAqIGBgYGh0bWxcbiAqIDxpYm0tcGFnaW5hdGlvbi1vdmVyZmxvdyBbZnJvbUluZGV4XT1cIjVcIiBbY291bnRdPVwiMzBcIiAoY2hhbmdlKT1cImhhbmRsZUNoYW5nZSh2YWx1ZSlcIj48L2libS1wYWdpbmF0aW9uLW92ZXJmbG93PlxuICogYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJpYm0tcGFnaW5hdGlvbi1vdmVyZmxvd1wiLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdDxsaSBjbGFzcz1cImJ4LS1wYWdpbmF0aW9uLW5hdl9fbGlzdC1pdGVtXCIgKm5nSWY9XCJjb3VudCA+IDFcIj5cblx0XHRcdDxkaXYgY2xhc3M9XCJieC0tcGFnaW5hdGlvbi1uYXZfX3NlbGVjdFwiPlxuXHRcdFx0PHNlbGVjdFxuXHRcdFx0XHRbYXR0ci5hcmlhLWxhYmVsXT1cImFyaWFMYWJlbFwiXG5cdFx0XHRcdGNsYXNzPVwiYngtLXBhZ2luYXRpb24tbmF2X19wYWdlIGJ4LS1wYWdpbmF0aW9uLW5hdl9fcGFnZS0tc2VsZWN0XCJcblx0XHRcdFx0KGNoYW5nZSk9XCJoYW5kbGVDaGFuZ2UoJGV2ZW50KVwiPlxuXHRcdFx0XHQ8b3B0aW9uIHZhbHVlPVwiXCIgaGlkZGVuPjwvb3B0aW9uPlxuXHRcdFx0XHQ8b3B0aW9uXG5cdFx0XHRcdCpuZ0Zvcj1cImxldCBpdGVtIG9mIGNvdW50QXNBcnJheTsgbGV0IGkgPSBpbmRleFwiPlxuXHRcdFx0XHRcdHt7ZnJvbUluZGV4ICsgaSArIDF9fVxuXHRcdFx0XHQ8L29wdGlvbj5cblx0XHRcdDwvc2VsZWN0PlxuXHRcdFx0PGRpdiBjbGFzcz1cImJ4LS1wYWdpbmF0aW9uLW5hdl9fc2VsZWN0LWljb24td3JhcHBlclwiPlxuXHRcdFx0XHQ8c3ZnXG5cdFx0XHRcdFx0aWJtSWNvbj1cIm92ZXJmbG93LW1lbnUtLWhvcml6b250YWxcIlxuXHRcdFx0XHRcdHNpemU9XCIxNlwiXG5cdFx0XHRcdFx0c3R5bGU9XCJkaXNwbGF5OiBpbmhlcml0XCJcblx0XHRcdFx0XHRjbGFzcz1cImJ4LS1wYWdpbmF0aW9uLW5hdl9fc2VsZWN0LWljb25cIj5cblx0XHRcdFx0PC9zdmc+XG5cdFx0XHQ8L2Rpdj5cblx0XHRcdDwvZGl2PlxuXHRcdDwvbGk+XG5cdFx0PGlibS1wYWdpbmF0aW9uLW5hdi1pdGVtICpuZ0lmPVwiY291bnQgPT09IDFcIiBbcGFnZV09XCJmcm9tSW5kZXggKyAxXCI+PC9pYm0tcGFnaW5hdGlvbi1uYXYtaXRlbT5cblx0YFxufSlcbmV4cG9ydCBjbGFzcyBQYWdpbmF0aW9uT3ZlcmZsb3cge1xuXHQvKipcblx0ICogVGhlIHBhZ2UgZm9yIHRoaXMgY29tcG9uZW50IHRvIGRpcHNsYXlcblx0ICovXG5cdEBJbnB1dCgpIGZyb21JbmRleDogbnVtYmVyO1xuXG5cdEBJbnB1dCgpIGNvdW50OiBudW1iZXI7XG5cblx0QElucHV0KCkgYXJpYUxhYmVsOiBzdHJpbmcgPSB0aGlzLmkxOG4uZ2V0KCkuUEFHSU5BVElPTi5TRUxFQ1RfQVJJQTtcblxuXHQvKipcblx0ICogRW1pdHMgY2xpY2sgZXZlbnRcblx0ICovXG5cdEBPdXRwdXQoKSBjaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPG51bWJlcj4oKTtcblxuXHRnZXQgY291bnRBc0FycmF5KCkge1xuXHRcdHJldHVybiBbLi4uQXJyYXkodGhpcy5jb3VudCldO1xuXHR9XG5cblx0Y29uc3RydWN0b3IocHJvdGVjdGVkIGkxOG46IEkxOG4pIHt9XG5cblx0aGFuZGxlQ2hhbmdlKGV2ZW50KSB7XG5cdFx0dGhpcy5jaGFuZ2UuZW1pdCgrZXZlbnQudGFyZ2V0LnZhbHVlKTtcblx0XHRldmVudC50YXJnZXQudmFsdWUgPSBcIlwiO1xuXHR9XG59XG4iXX0=