/**
 *
 * carbon-angular v0.0.0 | experimental.service.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * Represents options for an experiment. The only required property is `enabled`, however other options may be supplied.
 */
import * as ɵngcc0 from '@angular/core';
export interface Experiment {
    enabled: boolean;
    [key: string]: any;
}
export declare class ExperimentalService {
    /**
     * Map to hold all our experiments
     */
    private experiments;
    /**
     * Adds an experiment if it doesn't exist.
     */
    addExperiment(name: string, options?: Experiment): void;
    /**
     * Enables an experiment by name
     * @param name name of the experiment to enable
     */
    enableExperiment(name: string): void;
    /**
     * Disables an experiment by name
     * @param name name of the experiment to disable
     */
    disableExperiment(name: string): void;
    /**
     * Get the options for an experiment by name
     * @param name name of experiment to get
     */
    getExperiment(name: string): Experiment;
    /**
     * Get an array of tuples representing an experiment and it's options
     */
    getExperiments(): Array<[string, Experiment]>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ExperimentalService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<ExperimentalService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwZXJpbWVudGFsLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsiZXhwZXJpbWVudGFsLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdUJBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0NBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogY2FyYm9uLWFuZ3VsYXIgdjAuMC4wIHwgZXhwZXJpbWVudGFsLnNlcnZpY2UuZC50c1xuICpcbiAqIENvcHlyaWdodCAyMDE0LCAyMDIxIElCTVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cblxuLyoqXG4gKiBSZXByZXNlbnRzIG9wdGlvbnMgZm9yIGFuIGV4cGVyaW1lbnQuIFRoZSBvbmx5IHJlcXVpcmVkIHByb3BlcnR5IGlzIGBlbmFibGVkYCwgaG93ZXZlciBvdGhlciBvcHRpb25zIG1heSBiZSBzdXBwbGllZC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBFeHBlcmltZW50IHtcbiAgICBlbmFibGVkOiBib29sZWFuO1xuICAgIFtrZXk6IHN0cmluZ106IGFueTtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEV4cGVyaW1lbnRhbFNlcnZpY2Uge1xuICAgIC8qKlxuICAgICAqIE1hcCB0byBob2xkIGFsbCBvdXIgZXhwZXJpbWVudHNcbiAgICAgKi9cbiAgICBwcml2YXRlIGV4cGVyaW1lbnRzO1xuICAgIC8qKlxuICAgICAqIEFkZHMgYW4gZXhwZXJpbWVudCBpZiBpdCBkb2Vzbid0IGV4aXN0LlxuICAgICAqL1xuICAgIGFkZEV4cGVyaW1lbnQobmFtZTogc3RyaW5nLCBvcHRpb25zPzogRXhwZXJpbWVudCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogRW5hYmxlcyBhbiBleHBlcmltZW50IGJ5IG5hbWVcbiAgICAgKiBAcGFyYW0gbmFtZSBuYW1lIG9mIHRoZSBleHBlcmltZW50IHRvIGVuYWJsZVxuICAgICAqL1xuICAgIGVuYWJsZUV4cGVyaW1lbnQobmFtZTogc3RyaW5nKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBEaXNhYmxlcyBhbiBleHBlcmltZW50IGJ5IG5hbWVcbiAgICAgKiBAcGFyYW0gbmFtZSBuYW1lIG9mIHRoZSBleHBlcmltZW50IHRvIGRpc2FibGVcbiAgICAgKi9cbiAgICBkaXNhYmxlRXhwZXJpbWVudChuYW1lOiBzdHJpbmcpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEdldCB0aGUgb3B0aW9ucyBmb3IgYW4gZXhwZXJpbWVudCBieSBuYW1lXG4gICAgICogQHBhcmFtIG5hbWUgbmFtZSBvZiBleHBlcmltZW50IHRvIGdldFxuICAgICAqL1xuICAgIGdldEV4cGVyaW1lbnQobmFtZTogc3RyaW5nKTogRXhwZXJpbWVudDtcbiAgICAvKipcbiAgICAgKiBHZXQgYW4gYXJyYXkgb2YgdHVwbGVzIHJlcHJlc2VudGluZyBhbiBleHBlcmltZW50IGFuZCBpdCdzIG9wdGlvbnNcbiAgICAgKi9cbiAgICBnZXRFeHBlcmltZW50cygpOiBBcnJheTxbc3RyaW5nLCBFeHBlcmltZW50XT47XG59XG4iXX0=