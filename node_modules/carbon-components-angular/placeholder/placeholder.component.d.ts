/**
 *
 * carbon-angular v0.0.0 | placeholder.component.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { OnInit, ViewContainerRef } from "@angular/core";
import { PlaceholderService } from "./placeholder.service";
/**
 * Using a modal, dialog (Tooltip, OverflowMenu), or any other component that draws out of the normal page flow
 * in your application *requires* this component (`ibm-placeholder`).
 * It would generally be placed near the end of your root app component template
 * (app.component.ts or app.component.html) as:
 *
 * ```
 * <ibm-placeholder></ibm-placeholder>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class Placeholder implements OnInit {
    placeholderService: PlaceholderService;
    id: any;
    /**
     * Maintains a reference to the view DOM element of the `Placeholder`.
     */
    viewContainerRef: ViewContainerRef;
    /**
     * Creates an instance of `Placeholder`.
     */
    constructor(placeholderService: PlaceholderService);
    /**
     * Registers the components view with `PlaceholderService`
     */
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Placeholder>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Placeholder, "ibm-placeholder", never, {
    "id": "id";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhY2Vob2xkZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBsYWNlaG9sZGVyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFlQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICpcbiAqIGNhcmJvbi1hbmd1bGFyIHYwLjAuMCB8IHBsYWNlaG9sZGVyLmNvbXBvbmVudC5kLnRzXG4gKlxuICogQ29weXJpZ2h0IDIwMTQsIDIwMjEgSUJNXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuXG5pbXBvcnQgeyBPbkluaXQsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgUGxhY2Vob2xkZXJTZXJ2aWNlIH0gZnJvbSBcIi4vcGxhY2Vob2xkZXIuc2VydmljZVwiO1xuLyoqXG4gKiBVc2luZyBhIG1vZGFsLCBkaWFsb2cgKFRvb2x0aXAsIE92ZXJmbG93TWVudSksIG9yIGFueSBvdGhlciBjb21wb25lbnQgdGhhdCBkcmF3cyBvdXQgb2YgdGhlIG5vcm1hbCBwYWdlIGZsb3dcbiAqIGluIHlvdXIgYXBwbGljYXRpb24gKnJlcXVpcmVzKiB0aGlzIGNvbXBvbmVudCAoYGlibS1wbGFjZWhvbGRlcmApLlxuICogSXQgd291bGQgZ2VuZXJhbGx5IGJlIHBsYWNlZCBuZWFyIHRoZSBlbmQgb2YgeW91ciByb290IGFwcCBjb21wb25lbnQgdGVtcGxhdGVcbiAqIChhcHAuY29tcG9uZW50LnRzIG9yIGFwcC5jb21wb25lbnQuaHRtbCkgYXM6XG4gKlxuICogYGBgXG4gKiA8aWJtLXBsYWNlaG9sZGVyPjwvaWJtLXBsYWNlaG9sZGVyPlxuICogYGBgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBsYWNlaG9sZGVyIGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBwbGFjZWhvbGRlclNlcnZpY2U6IFBsYWNlaG9sZGVyU2VydmljZTtcbiAgICBpZDogYW55O1xuICAgIC8qKlxuICAgICAqIE1haW50YWlucyBhIHJlZmVyZW5jZSB0byB0aGUgdmlldyBET00gZWxlbWVudCBvZiB0aGUgYFBsYWNlaG9sZGVyYC5cbiAgICAgKi9cbiAgICB2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmO1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgYFBsYWNlaG9sZGVyYC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihwbGFjZWhvbGRlclNlcnZpY2U6IFBsYWNlaG9sZGVyU2VydmljZSk7XG4gICAgLyoqXG4gICAgICogUmVnaXN0ZXJzIHRoZSBjb21wb25lbnRzIHZpZXcgd2l0aCBgUGxhY2Vob2xkZXJTZXJ2aWNlYFxuICAgICAqL1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG59XG4iXX0=