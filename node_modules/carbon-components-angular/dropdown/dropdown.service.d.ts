/**
 *
 * carbon-angular v0.0.0 | dropdown.service.d.ts
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { OnDestroy } from "@angular/core";
import { PlaceholderService } from "carbon-components-angular/placeholder";
import { Subscription } from "rxjs";
import { AnimationFrameService } from "carbon-components-angular/utils";
import * as ɵngcc0 from '@angular/core';
export declare class DropdownService implements OnDestroy {
    protected placeholderService: PlaceholderService;
    protected animationFrameService: AnimationFrameService;
    offset: {
        top?: number;
        left?: number;
    };
    /**
     * reference to the body appended menu
     */
    protected menuInstance: HTMLElement;
    /**
     * Maintains an Event Observable Subscription for the global requestAnimationFrame.
     * requestAnimationFrame is tracked only if the `Dropdown` is appended to the body otherwise we don't need it
     */
    protected animationFrameSubscription: Subscription;
    protected _offset: {
        top: number;
        left: number;
    };
    constructor(placeholderService: PlaceholderService, animationFrameService: AnimationFrameService);
    /**
     * Appends the menu to the body, or a `ibm-placeholder` (if defined)
     *
     * @param parentRef container to position relative to
     * @param menuRef menu to be appended to body
     * @param classList any extra classes we should wrap the container with
     */
    appendToBody(parentRef: HTMLElement, menuRef: HTMLElement, classList: any): HTMLElement;
    /**
     * Reattach the dropdown menu to the parent container
     * @param hostRef container to append to
     */
    appendToDropdown(hostRef: HTMLElement): HTMLElement;
    /**
     * position an open dropdown relative to the given parentRef
     */
    updatePosition(parentRef: any): void;
    ngOnDestroy(): void;
    protected positionDropdown(parentRef: any, menuRef: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DropdownService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<DropdownService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24uc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJkcm9wZG93bi5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3QkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICpcbiAqIGNhcmJvbi1hbmd1bGFyIHYwLjAuMCB8IGRyb3Bkb3duLnNlcnZpY2UuZC50c1xuICpcbiAqIENvcHlyaWdodCAyMDE0LCAyMDIxIElCTVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cblxuaW1wb3J0IHsgT25EZXN0cm95IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IFBsYWNlaG9sZGVyU2VydmljZSB9IGZyb20gXCJjYXJib24tY29tcG9uZW50cy1hbmd1bGFyL3BsYWNlaG9sZGVyXCI7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tIFwicnhqc1wiO1xuaW1wb3J0IHsgQW5pbWF0aW9uRnJhbWVTZXJ2aWNlIH0gZnJvbSBcImNhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvdXRpbHNcIjtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIERyb3Bkb3duU2VydmljZSBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gICAgcHJvdGVjdGVkIHBsYWNlaG9sZGVyU2VydmljZTogUGxhY2Vob2xkZXJTZXJ2aWNlO1xuICAgIHByb3RlY3RlZCBhbmltYXRpb25GcmFtZVNlcnZpY2U6IEFuaW1hdGlvbkZyYW1lU2VydmljZTtcbiAgICBvZmZzZXQ6IHtcbiAgICAgICAgdG9wPzogbnVtYmVyO1xuICAgICAgICBsZWZ0PzogbnVtYmVyO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogcmVmZXJlbmNlIHRvIHRoZSBib2R5IGFwcGVuZGVkIG1lbnVcbiAgICAgKi9cbiAgICBwcm90ZWN0ZWQgbWVudUluc3RhbmNlOiBIVE1MRWxlbWVudDtcbiAgICAvKipcbiAgICAgKiBNYWludGFpbnMgYW4gRXZlbnQgT2JzZXJ2YWJsZSBTdWJzY3JpcHRpb24gZm9yIHRoZSBnbG9iYWwgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLlxuICAgICAqIHJlcXVlc3RBbmltYXRpb25GcmFtZSBpcyB0cmFja2VkIG9ubHkgaWYgdGhlIGBEcm9wZG93bmAgaXMgYXBwZW5kZWQgdG8gdGhlIGJvZHkgb3RoZXJ3aXNlIHdlIGRvbid0IG5lZWQgaXRcbiAgICAgKi9cbiAgICBwcm90ZWN0ZWQgYW5pbWF0aW9uRnJhbWVTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcbiAgICBwcm90ZWN0ZWQgX29mZnNldDoge1xuICAgICAgICB0b3A6IG51bWJlcjtcbiAgICAgICAgbGVmdDogbnVtYmVyO1xuICAgIH07XG4gICAgY29uc3RydWN0b3IocGxhY2Vob2xkZXJTZXJ2aWNlOiBQbGFjZWhvbGRlclNlcnZpY2UsIGFuaW1hdGlvbkZyYW1lU2VydmljZTogQW5pbWF0aW9uRnJhbWVTZXJ2aWNlKTtcbiAgICAvKipcbiAgICAgKiBBcHBlbmRzIHRoZSBtZW51IHRvIHRoZSBib2R5LCBvciBhIGBpYm0tcGxhY2Vob2xkZXJgIChpZiBkZWZpbmVkKVxuICAgICAqXG4gICAgICogQHBhcmFtIHBhcmVudFJlZiBjb250YWluZXIgdG8gcG9zaXRpb24gcmVsYXRpdmUgdG9cbiAgICAgKiBAcGFyYW0gbWVudVJlZiBtZW51IHRvIGJlIGFwcGVuZGVkIHRvIGJvZHlcbiAgICAgKiBAcGFyYW0gY2xhc3NMaXN0IGFueSBleHRyYSBjbGFzc2VzIHdlIHNob3VsZCB3cmFwIHRoZSBjb250YWluZXIgd2l0aFxuICAgICAqL1xuICAgIGFwcGVuZFRvQm9keShwYXJlbnRSZWY6IEhUTUxFbGVtZW50LCBtZW51UmVmOiBIVE1MRWxlbWVudCwgY2xhc3NMaXN0OiBhbnkpOiBIVE1MRWxlbWVudDtcbiAgICAvKipcbiAgICAgKiBSZWF0dGFjaCB0aGUgZHJvcGRvd24gbWVudSB0byB0aGUgcGFyZW50IGNvbnRhaW5lclxuICAgICAqIEBwYXJhbSBob3N0UmVmIGNvbnRhaW5lciB0byBhcHBlbmQgdG9cbiAgICAgKi9cbiAgICBhcHBlbmRUb0Ryb3Bkb3duKGhvc3RSZWY6IEhUTUxFbGVtZW50KTogSFRNTEVsZW1lbnQ7XG4gICAgLyoqXG4gICAgICogcG9zaXRpb24gYW4gb3BlbiBkcm9wZG93biByZWxhdGl2ZSB0byB0aGUgZ2l2ZW4gcGFyZW50UmVmXG4gICAgICovXG4gICAgdXBkYXRlUG9zaXRpb24ocGFyZW50UmVmOiBhbnkpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHBvc2l0aW9uRHJvcGRvd24ocGFyZW50UmVmOiBhbnksIG1lbnVSZWY6IGFueSk6IHZvaWQ7XG59XG4iXX0=