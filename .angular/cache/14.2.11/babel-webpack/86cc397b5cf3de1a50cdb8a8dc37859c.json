{"ast":null,"code":"/**\n *\n * carbon-angular v0.0.0 | carbon-components-angular-link.js\n *\n * Copyright 2014, 2023 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Directive, HostBinding, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/**\n * A convenience directive for applying styling to a link.\n *\n * [See demo](../../?path=/story/components-link--basic)\n *\n * Example:\n *\n * ```html\n * <a href=\"#\" ibmLink>A link</a>\n * ```\n *\n * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/link/code) for more detail.\n *\n * <example-url>../../iframe.html?id=components-link--basic</example-url>\n */\n\nimport * as ɵngcc0 from '@angular/core';\nlet Link = /*#__PURE__*/(() => {\n  class Link {\n    constructor() {\n      this.baseClass = true;\n      /**\n       * Set to true to show links inline in a sentence or paragraph.\n       */\n\n      this.inline = false;\n    }\n    /**\n     * Set to true to disable link.\n     */\n\n\n    set disabled(disabled) {\n      this._disabled = disabled;\n      this.tabindex = this.disabled ? -1 : null;\n    }\n\n    get disabled() {\n      return this._disabled;\n    }\n\n  }\n\n  Link.ɵfac = function Link_Factory(t) {\n    return new (t || Link)();\n  };\n\n  Link.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: Link,\n    selectors: [[\"\", \"ibmLink\", \"\"]],\n    hostVars: 8,\n    hostBindings: function Link_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"tabindex\", ctx.tabindex);\n        ɵngcc0.ɵɵclassProp(\"bx--link\", ctx.baseClass)(\"bx--link--inline\", ctx.inline)(\"bx--link--disabled\", ctx.disabled);\n      }\n    },\n    inputs: {\n      inline: \"inline\",\n      disabled: \"disabled\"\n    }\n  });\n  return Link;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet LinkModule = /*#__PURE__*/(() => {\n  class LinkModule {}\n\n  LinkModule.ɵfac = function LinkModule_Factory(t) {\n    return new (t || LinkModule)();\n  };\n\n  LinkModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: LinkModule\n  });\n  LinkModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n  return LinkModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LinkModule, {\n    declarations: function () {\n      return [Link];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [Link];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Link, LinkModule }; //# sourceMappingURL=carbon-components-angular-link.js.map","map":null,"metadata":{},"sourceType":"module"}