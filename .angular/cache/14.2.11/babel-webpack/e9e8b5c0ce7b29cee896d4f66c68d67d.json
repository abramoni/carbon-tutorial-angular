{"ast":null,"code":"/**\n *\n * carbon-angular v0.0.0 | carbon-components-angular-tag.js\n *\n * Copyright 2014, 2023 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Component, Input, HostBinding, Output, EventEmitter, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IconModule } from 'carbon-components-angular/icon';\n/**\n * Component that represents a tag for labelling/categorizing using keywords\n *\n * [See demo](../../?path=/story/components-tag--basic)\n *\n * <example-url>../../iframe.html?id=components-tag--basic</example-url>\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'carbon-components-angular/icon';\nconst _c0 = [\"*\"];\nlet Tag = /*#__PURE__*/(() => {\n  class Tag {\n    constructor() {\n      /**\n       * Type of the tag determines the styling\n       */\n      this.type = \"gray\";\n      /**\n       * Tag render size\n       */\n\n      this.size = \"md\";\n      this.class = \"\";\n    }\n\n    get attrClass() {\n      return `bx--tag bx--tag--${this.type} ${this.size === \"md\" ? \"bx--tag--md\" : \"bx--tag--sm\"} ${this.class}`;\n    }\n\n  }\n\n  Tag.ɵfac = function Tag_Factory(t) {\n    return new (t || Tag)();\n  };\n\n  Tag.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: Tag,\n    selectors: [[\"ibm-tag\"]],\n    hostVars: 1,\n    hostBindings: function Tag_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"class\", ctx.attrClass);\n      }\n    },\n    inputs: {\n      type: \"type\",\n      size: \"size\",\n      class: \"class\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function Tag_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  return Tag;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TagFilter = /*#__PURE__*/(() => {\n  class TagFilter extends Tag {\n    constructor() {\n      super(...arguments);\n      this.closeButtonLabel = \"Clear Filter\";\n      /**\n       * Function for close/delete the tag\n       */\n\n      this.close = new EventEmitter();\n      /**\n       * We need to stop the immedate propagation of click on the close button\n       * to prevent undesired effects when used within dialogs.\n       *\n       * We need to emit a click event on close to allow for clicks to be listened\n       * to on the immediate close button element. `action` distinguishes between clicks on\n       * the tag vs. clicks on the close button.\n       */\n\n      this.click = new EventEmitter();\n    }\n\n    onClick(event) {\n      event.stopImmediatePropagation();\n\n      if (!this.disabled) {\n        this.click.emit({\n          action: \"click\"\n        });\n      }\n    }\n\n    onClose(event) {\n      event.stopImmediatePropagation();\n      this.click.emit({\n        action: \"close\"\n      });\n      this.close.emit();\n    }\n\n    get attrClass() {\n      return `bx--tag bx--tag--filter bx--tag--${this.type} ${this.class}${this.disabled ? \" bx--tag--disabled\" : \"\"}`;\n    }\n\n    get attrAriaLabel() {\n      return `${this.title || \"\"} ${this.closeButtonLabel}`.trim();\n    }\n\n  }\n\n  TagFilter.ɵfac = /*@__PURE__*/function () {\n    let ɵTagFilter_BaseFactory;\n    return function TagFilter_Factory(t) {\n      return (ɵTagFilter_BaseFactory || (ɵTagFilter_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TagFilter)))(t || TagFilter);\n    };\n  }();\n\n  TagFilter.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TagFilter,\n    selectors: [[\"ibm-tag-filter\"]],\n    hostVars: 2,\n    hostBindings: function TagFilter_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"class\", ctx.attrClass)(\"aria-label\", ctx.attrAriaLabel);\n      }\n    },\n    inputs: {\n      closeButtonLabel: \"closeButtonLabel\",\n      disabled: \"disabled\",\n      title: \"title\"\n    },\n    outputs: {\n      close: \"close\",\n      click: \"click\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 6,\n    vars: 4,\n    consts: [[1, \"bx--tag__label\", 3, \"click\"], [1, \"bx--tag__close-icon\", 3, \"disabled\", \"title\", \"click\"], [1, \"bx--visually-hidden\"], [\"ibmIcon\", \"close\", \"size\", \"16\"]],\n    template: function TagFilter_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function TagFilter_Template_span_click_0_listener($event) {\n          return ctx.onClick($event);\n        });\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"button\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function TagFilter_Template_button_click_2_listener($event) {\n          return ctx.onClose($event);\n        });\n        ɵngcc0.ɵɵelementStart(3, \"span\", 2);\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelement(5, \"svg\", 3);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"title\", ctx.title ? ctx.title : null);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"title\", ctx.closeButtonLabel);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.closeButtonLabel);\n      }\n    },\n    dependencies: [ɵngcc1.IconDirective],\n    encapsulation: 2\n  });\n  return TagFilter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TagModule = /*#__PURE__*/(() => {\n  class TagModule {}\n\n  TagModule.ɵfac = function TagModule_Factory(t) {\n    return new (t || TagModule)();\n  };\n\n  TagModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TagModule\n  });\n  TagModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [CommonModule, IconModule]\n  });\n  return TagModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TagModule, {\n    declarations: function () {\n      return [Tag, TagFilter];\n    },\n    imports: function () {\n      return [CommonModule, IconModule];\n    },\n    exports: function () {\n      return [Tag, TagFilter];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TagFilter, Tag, TagModule }; //# sourceMappingURL=carbon-components-angular-tag.js.map","map":null,"metadata":{},"sourceType":"module"}