{"ast":null,"code":"/**\n *\n * carbon-angular v0.0.0 | carbon-components-angular-timepicker-select.js\n *\n * Copyright 2014, 2023 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Component, Input, HostBinding, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Select, SelectModule } from 'carbon-components-angular/select';\nimport { IconModule } from 'carbon-components-angular/icon';\n/**\n * [See demo](../../?path=/story/components-time-picker-select--simple)\n *\n * <example-url>../../iframe.html?id=components-time-picker-select--simple</example-url>\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'carbon-components-angular/icon';\n\nfunction TimePickerSelect_label_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r0.id);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.label);\n  }\n}\n\nfunction TimePickerSelect__svg_svg_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"svg\", 6);\n  }\n}\n\nconst _c0 = [\"*\"];\nlet TimePickerSelect = /*#__PURE__*/(() => {\n  class TimePickerSelect extends Select {\n    constructor() {\n      super(...arguments);\n      this.timeSelect = true;\n      this.timePickerSelect = true;\n      this.id = `timepicker-select-${TimePickerSelect.selectCount++}`;\n      /**\n       * Set to true for a loading select.\n       */\n\n      this.skeleton = false;\n      /**\n       * `light` or `dark` select theme\n       */\n\n      this.theme = \"dark\";\n      this.timePickerSelectSkeleton = this.skeleton;\n    }\n\n    get timePickerSelectLight() {\n      return this.theme === \"light\";\n    }\n\n  }\n\n  TimePickerSelect.ɵfac = /*@__PURE__*/function () {\n    let ɵTimePickerSelect_BaseFactory;\n    return function TimePickerSelect_Factory(t) {\n      return (ɵTimePickerSelect_BaseFactory || (ɵTimePickerSelect_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TimePickerSelect)))(t || TimePickerSelect);\n    };\n  }();\n\n  TimePickerSelect.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TimePickerSelect,\n    selectors: [[\"ibm-timepicker-select\"]],\n    hostVars: 8,\n    hostBindings: function TimePickerSelect_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"bx--select\", ctx.timeSelect)(\"bx--time-picker__select\", ctx.timePickerSelect)(\"bx--skeleton\", ctx.timePickerSelectSkeleton)(\"bx--select--light\", ctx.timePickerSelectLight);\n      }\n    },\n    inputs: {\n      id: \"id\",\n      skeleton: \"skeleton\",\n      theme: \"theme\",\n      ariaLabel: \"ariaLabel\",\n      label: \"label\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: TimePickerSelect,\n      multi: true\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 6,\n    vars: 5,\n    consts: [[\"class\", \"bx--label bx--visually-hidden\", 4, \"ngIf\"], [1, \"bx--select-input__wrapper\"], [1, \"bx--select-input\", 3, \"disabled\", \"change\"], [\"select\", \"\"], [\"ibmIcon\", \"chevron--down\", \"size\", \"16\", \"class\", \"bx--select__arrow\", 4, \"ngIf\"], [1, \"bx--label\", \"bx--visually-hidden\"], [\"ibmIcon\", \"chevron--down\", \"size\", \"16\", 1, \"bx--select__arrow\"]],\n    template: function TimePickerSelect_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, TimePickerSelect_label_0_Template, 2, 2, \"label\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1)(2, \"select\", 2, 3);\n        ɵngcc0.ɵɵlistener(\"change\", function TimePickerSelect_Template_select_change_2_listener($event) {\n          return ctx.onChange($event);\n        });\n        ɵngcc0.ɵɵprojection(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(5, TimePickerSelect__svg_svg_5_Template, 1, 0, \"svg\", 4);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.skeleton && ctx.label);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"aria-label\", ctx.ariaLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.skeleton);\n      }\n    },\n    dependencies: [ɵngcc1.NgIf, ɵngcc2.IconDirective],\n    encapsulation: 2\n  });\n  return TimePickerSelect;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TimePickerSelectModule = /*#__PURE__*/(() => {\n  class TimePickerSelectModule {}\n\n  TimePickerSelectModule.ɵfac = function TimePickerSelectModule_Factory(t) {\n    return new (t || TimePickerSelectModule)();\n  };\n\n  TimePickerSelectModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TimePickerSelectModule\n  });\n  TimePickerSelectModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [SelectModule, CommonModule, IconModule]\n  });\n  return TimePickerSelectModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TimePickerSelectModule, {\n    declarations: function () {\n      return [TimePickerSelect];\n    },\n    imports: function () {\n      return [SelectModule, CommonModule, IconModule];\n    },\n    exports: function () {\n      return [TimePickerSelect];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TimePickerSelect, TimePickerSelectModule }; //# sourceMappingURL=carbon-components-angular-timepicker-select.js.map","map":null,"metadata":{},"sourceType":"module"}