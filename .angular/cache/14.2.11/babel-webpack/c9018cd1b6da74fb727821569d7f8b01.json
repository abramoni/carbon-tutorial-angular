{"ast":null,"code":"/**\n *\n * carbon-angular v0.0.0 | carbon-components-angular-progress-indicator.js\n *\n * Copyright 2014, 2023 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Component, Input, Output, EventEmitter, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DialogModule } from 'carbon-components-angular/dialog';\nimport { IconModule } from 'carbon-components-angular/icon';\n/**\n * [See demo](../../?path=/story/components-progress-indicator--basic)\n *\n * <example-url>../../iframe.html?id=components-progress-indicator--basic</example-url>\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'carbon-components-angular/dialog';\nimport * as ɵngcc3 from 'carbon-components-angular/icon';\n\nfunction ProgressIndicator_li_1_ng_container_2__svg_svg_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"svg\", 12);\n  }\n}\n\nfunction ProgressIndicator_li_1_ng_container_2__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"svg\", 13);\n  }\n}\n\nfunction ProgressIndicator_li_1_ng_container_2__svg_svg_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"svg\", 14);\n  }\n}\n\nfunction ProgressIndicator_li_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, ProgressIndicator_li_1_ng_container_2__svg_svg_1_Template, 1, 0, \"svg\", 9);\n    ɵngcc0.ɵɵtemplate(2, ProgressIndicator_li_1_ng_container_2__svg_svg_2_Template, 1, 0, \"svg\", 10);\n    ɵngcc0.ɵɵtemplate(3, ProgressIndicator_li_1_ng_container_2__svg_svg_3_Template, 1, 0, \"svg\", 11);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const step_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", step_r1.state.includes(\"complete\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", step_r1.state.includes(\"current\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", step_r1.state.includes(\"incomplete\"));\n  }\n}\n\nfunction ProgressIndicator_li_1__svg_svg_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"svg\", 15);\n  }\n}\n\nfunction ProgressIndicator_li_1_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"p\", 16);\n    ɵngcc0.ɵɵlistener(\"click\", function ProgressIndicator_li_1_p_4_Template_p_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      const ctx_r12 = ɵngcc0.ɵɵnextContext();\n      const step_r1 = ctx_r12.$implicit;\n      const i_r2 = ctx_r12.index;\n      const ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r11.stepSelected.emit({\n        step: step_r1,\n        index: i_r2\n      }));\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const step_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"ibmTooltip\", step_r1.tooltip.content)(\"trigger\", step_r1.tooltip.trigger)(\"placement\", step_r1.tooltip.placement)(\"title\", step_r1.tooltip.title)(\"gap\", step_r1.tooltip.gap)(\"appendInline\", step_r1.tooltip.appendInline)(\"data\", step_r1.tooltip.data);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", step_r1.text, \" \");\n  }\n}\n\nfunction ProgressIndicator_li_1_div_5_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"p\", 20);\n    ɵngcc0.ɵɵlistener(\"click\", function ProgressIndicator_li_1_div_5_p_1_Template_p_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      const ctx_r18 = ɵngcc0.ɵɵnextContext(2);\n      const step_r1 = ctx_r18.$implicit;\n      const i_r2 = ctx_r18.index;\n      const ctx_r17 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r17.stepSelected.emit({\n        step: step_r1,\n        index: i_r2\n      }));\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const step_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(step_r1.text);\n  }\n}\n\nfunction ProgressIndicator_li_1_div_5_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"p\", 21);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const step_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(step_r1.optionalText);\n  }\n}\n\nfunction ProgressIndicator_li_1_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17);\n    ɵngcc0.ɵɵtemplate(1, ProgressIndicator_li_1_div_5_p_1_Template, 2, 1, \"p\", 18);\n    ɵngcc0.ɵɵtemplate(2, ProgressIndicator_li_1_div_5_p_2_Template, 2, 1, \"p\", 19);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const step_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !step_r1.tooltip);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", step_r1.optionalText);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"bx--progress-step--disabled\": a0\n  };\n};\n\nfunction ProgressIndicator_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 2)(1, \"button\", 3);\n    ɵngcc0.ɵɵtemplate(2, ProgressIndicator_li_1_ng_container_2_Template, 4, 3, \"ng-container\", 4);\n    ɵngcc0.ɵɵtemplate(3, ProgressIndicator_li_1__svg_svg_3_Template, 1, 0, \"svg\", 5);\n    ɵngcc0.ɵɵtemplate(4, ProgressIndicator_li_1_p_4_Template, 2, 8, \"p\", 6);\n    ɵngcc0.ɵɵtemplate(5, ProgressIndicator_li_1_div_5_Template, 3, 2, \"div\", 7);\n    ɵngcc0.ɵɵelement(6, \"span\", 8);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const step_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵclassMapInterpolate1(\"bx--progress-step bx--progress-step--\", step_r1.state[0], \"\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(8, _c0, step_r1.disabled));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !step_r1.state.includes(\"error\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", step_r1.state.includes(\"error\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", step_r1.tooltip);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !step_r1.tooltip || step_r1.optionalText);\n  }\n}\n\nconst _c1 = function (a0, a1, a2) {\n  return {\n    \"bx--skeleton\": a0,\n    \"bx--progress--vertical\": a1,\n    \"bx--progress--space-equal\": a2\n  };\n};\n\nlet ProgressIndicator = /*#__PURE__*/(() => {\n  class ProgressIndicator {\n    constructor() {\n      this.stepSelected = new EventEmitter();\n      this.orientation = \"horizontal\";\n      this.skeleton = false;\n      this.spacing = \"default\";\n    }\n\n    static skeletonSteps(stepCount) {\n      const steps = [];\n\n      for (let i = 0; i < stepCount; i++) {\n        steps.push({\n          \"state\": [\"incomplete\"]\n        });\n      }\n\n      return steps;\n    }\n\n    get current() {\n      return this.steps.findIndex(step => step.state.includes(\"current\"));\n    }\n\n    set current(current) {\n      this._current = current;\n    }\n\n    ngOnChanges(changes) {\n      if (changes.steps || changes.current) {\n        this.setProgressIndicatorStates();\n      }\n    }\n\n    setProgressIndicatorStates() {\n      if (this.steps === undefined) {\n        return;\n      }\n\n      if (this._current === undefined || this._current < 0) {\n        for (let i = 0; i < this.steps.length; i++) {\n          this.steps[i].state[0] = \"incomplete\";\n        }\n\n        return;\n      }\n\n      if (this._current > this.steps.length - 1) {\n        for (let i = 0; i < this.steps.length; i++) {\n          this.steps[i].state[0] = \"complete\";\n        }\n\n        return;\n      }\n\n      this.steps[this._current].state[0] = \"current\";\n\n      for (let i = 0; i < this._current; i++) {\n        this.steps[i].state[0] = \"complete\";\n      }\n\n      for (let i = this._current + 1; i < this.steps.length; i++) {\n        this.steps[i].state[0] = \"incomplete\";\n      }\n    }\n\n  }\n\n  ProgressIndicator.ɵfac = function ProgressIndicator_Factory(t) {\n    return new (t || ProgressIndicator)();\n  };\n\n  ProgressIndicator.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ProgressIndicator,\n    selectors: [[\"ibm-progress-indicator\"]],\n    inputs: {\n      orientation: \"orientation\",\n      skeleton: \"skeleton\",\n      spacing: \"spacing\",\n      current: \"current\",\n      steps: \"steps\"\n    },\n    outputs: {\n      stepSelected: \"stepSelected\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 6,\n    consts: [[\"data-progress\", \"\", \"data-progress-current\", \"\", 1, \"bx--progress\", 3, \"ngClass\"], [3, \"class\", \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [\"role\", \"button\", \"tabindex\", \"-1\", 1, \"bx--progress-step-button\", \"bx--progress-step-button--unclickable\"], [4, \"ngIf\"], [\"ibmIcon\", \"warning\", \"size\", \"16\", \"class\", \"bx--progress__warning\", 4, \"ngIf\"], [\"class\", \"bx--progress-label\", 3, \"ibmTooltip\", \"trigger\", \"placement\", \"title\", \"gap\", \"appendInline\", \"data\", \"click\", 4, \"ngIf\"], [\"class\", \"bx--progress-text\", 4, \"ngIf\"], [1, \"bx--progress-line\"], [\"ibmIcon\", \"checkmark--outline\", \"size\", \"16\", 4, \"ngIf\"], [\"ibmIcon\", \"incomplete\", \"size\", \"16\", 4, \"ngIf\"], [\"ibmIcon\", \"circle-dash\", \"size\", \"16\", 4, \"ngIf\"], [\"ibmIcon\", \"checkmark--outline\", \"size\", \"16\"], [\"ibmIcon\", \"incomplete\", \"size\", \"16\"], [\"ibmIcon\", \"circle-dash\", \"size\", \"16\"], [\"ibmIcon\", \"warning\", \"size\", \"16\", 1, \"bx--progress__warning\"], [1, \"bx--progress-label\", 3, \"ibmTooltip\", \"trigger\", \"placement\", \"title\", \"gap\", \"appendInline\", \"data\", \"click\"], [1, \"bx--progress-text\"], [\"class\", \"bx--progress-label\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"bx--progress-optional\", 4, \"ngIf\"], [1, \"bx--progress-label\", 3, \"click\"], [1, \"bx--progress-optional\"]],\n    template: function ProgressIndicator_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n        ɵngcc0.ɵɵtemplate(1, ProgressIndicator_li_1_Template, 7, 10, \"li\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction3(2, _c1, ctx.skeleton, ctx.orientation === \"vertical\", ctx.spacing === \"equal\" && ctx.orientation !== \"vertical\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n      }\n    },\n    dependencies: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc2.TooltipDirective, ɵngcc3.IconDirective],\n    encapsulation: 2\n  });\n  return ProgressIndicator;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ProgressIndicatorModule = /*#__PURE__*/(() => {\n  class ProgressIndicatorModule {}\n\n  ProgressIndicatorModule.ɵfac = function ProgressIndicatorModule_Factory(t) {\n    return new (t || ProgressIndicatorModule)();\n  };\n\n  ProgressIndicatorModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ProgressIndicatorModule\n  });\n  ProgressIndicatorModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [CommonModule, DialogModule, IconModule]\n  });\n  return ProgressIndicatorModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ProgressIndicatorModule, {\n    declarations: function () {\n      return [ProgressIndicator];\n    },\n    imports: function () {\n      return [CommonModule, DialogModule, IconModule];\n    },\n    exports: function () {\n      return [ProgressIndicator];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ProgressIndicator, ProgressIndicatorModule }; //# sourceMappingURL=carbon-components-angular-progress-indicator.js.map","map":null,"metadata":{},"sourceType":"module"}