{"ast":null,"code":"/**\n *\n * carbon-angular v0.0.0 | carbon-components-angular-file-uploader.js\n *\n * Copyright 2014, 2023 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { I18n } from 'carbon-components-angular/i18n';\nimport { Component, Input, Output, ViewChild, EventEmitter, TemplateRef, HostBinding, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'carbon-components-angular/button';\nimport { LoadingModule } from 'carbon-components-angular/loading';\nimport { IconModule } from 'carbon-components-angular/icon';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'carbon-components-angular/i18n';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'carbon-components-angular/button';\nimport * as ɵngcc4 from 'carbon-components-angular/loading';\nimport * as ɵngcc5 from 'carbon-components-angular/icon';\nconst _c0 = [\"fileInput\"];\n\nfunction FileUploader_ng_container_0_div_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7.dropText);\n  }\n}\n\nfunction FileUploader_ng_container_0_div_6_2_ng_template_0_Template(rf, ctx) {}\n\nfunction FileUploader_ng_container_0_div_6_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, FileUploader_ng_container_0_div_6_2_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r8.dropText);\n  }\n}\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"bx--file-browse-btn--disabled\": a0,\n    \"bx--file__drop-container--drag-over\": a1\n  };\n};\n\nfunction FileUploader_ng_container_0_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function FileUploader_ng_container_0_div_6_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      ɵngcc0.ɵɵnextContext();\n\n      const _r5 = ɵngcc0.ɵɵreference(9);\n\n      return ɵngcc0.ɵɵresetView(_r5.click());\n    })(\"dragover\", function FileUploader_ng_container_0_div_6_Template_div_dragover_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      const ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r12.onDragOver($event));\n    })(\"dragleave\", function FileUploader_ng_container_0_div_6_Template_div_dragleave_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      const ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r13.onDragLeave($event));\n    })(\"drop\", function FileUploader_ng_container_0_div_6_Template_div_drop_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      const ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r14.onDrop($event));\n    })(\"keyup.enter\", function FileUploader_ng_container_0_div_6_Template_div_keyup_enter_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      ɵngcc0.ɵɵnextContext();\n\n      const _r5 = ɵngcc0.ɵɵreference(9);\n\n      return ɵngcc0.ɵɵresetView(_r5.click());\n    })(\"keyup.space\", function FileUploader_ng_container_0_div_6_Template_div_keyup_space_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      ɵngcc0.ɵɵnextContext();\n\n      const _r5 = ɵngcc0.ɵɵreference(9);\n\n      return ɵngcc0.ɵɵresetView(_r5.click());\n    });\n    ɵngcc0.ɵɵtemplate(1, FileUploader_ng_container_0_div_6_ng_container_1_Template, 2, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(2, FileUploader_ng_container_0_div_6_2_Template, 1, 1, null, 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(4, _c1, ctx_r3.disabled, ctx_r3.dragOver));\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r3.fileUploaderId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r3.isTemplate(ctx_r3.dropText));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.isTemplate(ctx_r3.dropText));\n  }\n}\n\nfunction FileUploader_ng_container_0_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 14);\n    ɵngcc0.ɵɵlistener(\"click\", function FileUploader_ng_container_0_button_7_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      ɵngcc0.ɵɵnextContext();\n\n      const _r5 = ɵngcc0.ɵɵreference(9);\n\n      return ɵngcc0.ɵɵresetView(_r5.click());\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ibmButton\", ctx_r4.buttonType)(\"size\", ctx_r4.size)(\"disabled\", ctx_r4.disabled);\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4.fileUploaderId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r4.buttonText, \" \");\n  }\n}\n\nfunction FileUploader_ng_container_0_ng_container_11_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fileItem_r19 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", fileItem_r19.invalidText, \" \");\n  }\n}\n\nfunction FileUploader_ng_container_0_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"ibm-file\", 15);\n    ɵngcc0.ɵɵlistener(\"remove\", function FileUploader_ng_container_0_ng_container_11_Template_ibm_file_remove_1_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r23);\n      const fileItem_r19 = restoredCtx.$implicit;\n      const ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r22.removeFile(fileItem_r19));\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(2, FileUploader_ng_container_0_ng_container_11_div_2_Template, 2, 1, \"div\", 16);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const fileItem_r19 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"fileItem\", fileItem_r19);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", fileItem_r19.invalid);\n  }\n}\n\nfunction FileUploader_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"label\", 2);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"p\", 3);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(6, FileUploader_ng_container_0_div_6_Template, 3, 7, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(7, FileUploader_ng_container_0_button_7_Template, 2, 5, \"button\", 6);\n    ɵngcc0.ɵɵelementStart(8, \"input\", 7, 8);\n    ɵngcc0.ɵɵlistener(\"change\", function FileUploader_ng_container_0_Template_input_change_8_listener() {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      const ctx_r24 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r24.onFilesAdded());\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(10, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(11, FileUploader_ng_container_0_ng_container_11_Template, 3, 2, \"ng-container\", 10);\n    ɵngcc0.ɵɵelementEnd()();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"for\", ctx_r0.fileUploaderId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.title);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.description);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.drop);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.drop);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"accept\", ctx_r0.accept)(\"id\", ctx_r0.fileUploaderId)(\"multiple\", ctx_r0.multiple)(\"disabled\", ctx_r0.disabled);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.files);\n  }\n}\n\nfunction FileUploader_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 18)(1, \"div\", 19)(2, \"button\", 20);\n  }\n}\n\nfunction FileComponent_span_2__svg_svg_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"svg\", 7);\n  }\n}\n\nfunction FileComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 3);\n    ɵngcc0.ɵɵtemplate(1, FileComponent_span_2__svg_svg_1_Template, 1, 0, \"svg\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"button\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function FileComponent_span_2_Template_button_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r4.remove.emit());\n    })(\"keyup.enter\", function FileComponent_span_2_Template_button_keyup_enter_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r6.remove.emit());\n    })(\"keyup.space\", function FileComponent_span_2_Template_button_keyup_space_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r7.remove.emit());\n    });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(3, \"svg\", 6);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.isInvalidText);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.translations.REMOVE_BUTTON);\n  }\n}\n\nfunction FileComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\")(1, \"div\", 8);\n    ɵngcc0.ɵɵelement(2, \"ibm-loading\", 9);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n}\n\nfunction FileComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 3);\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(1, \"svg\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ariaLabel\", ctx_r2.translations.CHECKMARK)(\"isFocusable\", true);\n  }\n}\n\nconst noop = () => {};\n/**\n * [See demo](../../?path=/story/components-file-uploader--basic)\n *\n * <example-url>../../iframe.html?id=components-file-uploader--basic</example-url>\n */\n\n\nlet FileUploader = /*#__PURE__*/(() => {\n  class FileUploader {\n    constructor(i18n) {\n      this.i18n = i18n;\n      /**\n       * Accessible text for the button that opens the upload window.\n       *\n       * Defaults to the `FILE_UPLOADER.OPEN` value from the i18n service\n       */\n\n      this.buttonText = this.i18n.get().FILE_UPLOADER.OPEN;\n      /**\n       * Type set for button\n       */\n\n      this.buttonType = \"primary\";\n      /**\n       * Specify the types of files that the input should be able to receive\n       */\n\n      this.accept = [];\n      /**\n       * Set to `false` to tell the component to only accept a single file on upload.\n       *\n       * Defaults to `true`. Accepts multiple files.\n       */\n\n      this.multiple = true;\n      /**\n       * Set to `true` for a loading file uploader.\n       */\n\n      this.skeleton = false;\n      /**\n       * Set to `true` to enable drag and drop.\n       */\n\n      this.drop = false;\n      /**\n       * Provides a unique id for the underlying <input> node\n       */\n\n      this.fileUploaderId = `file-uploader-${FileUploader.fileUploaderCount}`;\n      /**\n       * The list of files that have been submitted to be uploaded\n       */\n\n      this.files = new Set();\n      /**\n       * Set to `true` to disable upload button\n       */\n\n      this.disabled = false;\n      this.filesChange = new EventEmitter();\n      /**\n       * Controls the state of the drag and drop file container\n       */\n\n      this.dragOver = false;\n      this.onTouchedCallback = noop;\n      this.onChangeCallback = noop;\n      FileUploader.fileUploaderCount++;\n    }\n    /**\n     * Specifies the property to be used as the return value to `ngModel` and reactive forms.\n     * Updates `this.files`.\n     */\n\n\n    get value() {\n      return this.files;\n    }\n\n    set value(v) {\n      if (v !== this.files) {\n        this.files = v;\n        this.onChangeCallback(v);\n      }\n    }\n\n    onBlur() {\n      this.onTouchedCallback();\n    }\n\n    get fileList() {\n      return Array.from(this.fileInput.nativeElement.files);\n    }\n    /**\n     * Propagates the injected `value`.\n     */\n\n\n    writeValue(value) {\n      if (value !== this.value) {\n        this.files = value;\n      }\n    }\n\n    createFileItem(file) {\n      return {\n        uploaded: false,\n        state: \"edit\",\n        invalid: false,\n        invalidText: \"\",\n        file: file\n      };\n    }\n\n    onFilesAdded() {\n      const newFiles = new Set(this.files);\n\n      if (!this.multiple) {\n        newFiles.clear();\n      }\n\n      for (let file of this.fileList) {\n        const fileItem = this.createFileItem(file);\n        newFiles.add(fileItem);\n      }\n\n      this.value = newFiles;\n      this.filesChange.emit(newFiles);\n    }\n\n    onDragOver(event) {\n      event.stopPropagation();\n      event.preventDefault();\n      this.dragOver = true;\n    }\n\n    onDragLeave(event) {\n      event.stopPropagation();\n      event.preventDefault();\n      this.dragOver = false;\n    }\n\n    onDrop(event) {\n      event.stopPropagation();\n      event.preventDefault();\n      const transferredFiles = Array.from(event.dataTransfer.files);\n      const newFiles = new Set(this.files);\n      transferredFiles.filter(({\n        name,\n        type\n      }) => {\n        // Get the file extension and add a \".\" to the beginning.\n        const fileExtension = name.split(\".\").pop().replace(/^/, \".\"); // Check if the accept array contains the mime type or extension of the file.\n\n        return this.accept.includes(type) || this.accept.includes(fileExtension) || !this.accept.length;\n      }).forEach(file => {\n        if (!newFiles.size || this.multiple) {\n          const fileItem = this.createFileItem(file);\n          newFiles.add(fileItem);\n        }\n      });\n      this.value = newFiles;\n      this.filesChange.emit(newFiles);\n      this.dragOver = false;\n    }\n\n    removeFile(fileItem) {\n      // Deleting an item from this.files removes the <ibm-file> component,\n      // which triggers its ngOnDestroy(), which fires the (remove) event again.\n      // So, (remove) may double-fire and we need to handle it here.\n      if (this.files && this.files.has(fileItem)) {\n        const newFiles = new Set(this.files);\n        newFiles.delete(fileItem);\n        this.filesChange.emit(newFiles);\n        this.value = newFiles;\n      }\n\n      this.fileInput.nativeElement.value = \"\";\n    }\n\n    isTemplate(value) {\n      return value instanceof TemplateRef;\n    }\n    /**\n     * Registers the injected function to control the touch use of the `FileUploader`.\n     */\n\n\n    registerOnTouched(fn) {\n      this.onTouchedCallback = fn;\n    }\n    /**\n     * Sets a method in order to propagate changes back to the form.\n     */\n\n\n    registerOnChange(fn) {\n      this.onChangeCallback = fn;\n    }\n    /**\n     * `ControlValueAccessor` method to programmatically disable the checkbox.\n     *\n     * ex: `this.formGroup.get(\"myFileUploader\").disable();`\n     *\n     * @param isDisabled `true` to disable the file uploader\n     */\n\n\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n\n  }\n\n  FileUploader.ɵfac = function FileUploader_Factory(t) {\n    return new (t || FileUploader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.I18n));\n  };\n\n  FileUploader.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FileUploader,\n    selectors: [[\"ibm-file-uploader\"]],\n    viewQuery: function FileUploader_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n      }\n    },\n    inputs: {\n      buttonText: \"buttonText\",\n      buttonType: \"buttonType\",\n      accept: \"accept\",\n      multiple: \"multiple\",\n      skeleton: \"skeleton\",\n      drop: \"drop\",\n      fileUploaderId: \"fileUploaderId\",\n      files: \"files\",\n      disabled: \"disabled\",\n      title: \"title\",\n      description: \"description\",\n      size: \"size\",\n      dropText: \"dropText\"\n    },\n    outputs: {\n      filesChange: \"filesChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: FileUploader,\n      multi: true\n    }])],\n    decls: 3,\n    vars: 2,\n    consts: [[4, \"ngIf\", \"ngIfElse\"], [\"skeletonTemplate\", \"\"], [1, \"bx--file--label\", 3, \"for\"], [1, \"bx--label-description\"], [1, \"bx--file\"], [\"class\", \"bx--file-browse-btn bx--file__drop-container\", \"role\", \"button\", \"tabindex\", \"0\", 3, \"ngClass\", \"click\", \"dragover\", \"dragleave\", \"drop\", \"keyup.enter\", \"keyup.space\", 4, \"ngIf\"], [\"type\", \"button\", 3, \"ibmButton\", \"size\", \"disabled\", \"click\", 4, \"ngIf\"], [\"type\", \"file\", \"tabindex\", \"-1\", 1, \"bx--file-input\", 3, \"accept\", \"id\", \"multiple\", \"disabled\", \"change\"], [\"fileInput\", \"\"], [1, \"bx--file-container\"], [4, \"ngFor\", \"ngForOf\"], [\"role\", \"button\", \"tabindex\", \"0\", 1, \"bx--file-browse-btn\", \"bx--file__drop-container\", 3, \"ngClass\", \"click\", \"dragover\", \"dragleave\", \"drop\", \"keyup.enter\", \"keyup.space\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\"], [\"type\", \"button\", 3, \"ibmButton\", \"size\", \"disabled\", \"click\"], [3, \"fileItem\", \"remove\"], [\"class\", \"bx--form-requirement\", 4, \"ngIf\"], [1, \"bx--form-requirement\"], [1, \"bx--skeleton__text\", 2, \"width\", \"100px\"], [1, \"bx--skeleton__text\", 2, \"width\", \"225px\"], [\"ibmButton\", \"\", \"skeleton\", \"true\"]],\n    template: function FileUploader_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, FileUploader_ng_container_0_Template, 12, 10, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, FileUploader_ng_template_1_Template, 3, 0, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = ɵngcc0.ɵɵreference(2);\n\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.skeleton)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: function () {\n      return [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet, ɵngcc3.Button, FileComponent];\n    },\n    encapsulation: 2\n  });\n  /**\n   * Counter used to create unique ids for file-uploader components\n   */\n\n  FileUploader.fileUploaderCount = 0;\n  /** @nocollapse */\n\n  return FileUploader;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FileComponent = /*#__PURE__*/(() => {\n  class FileComponent {\n    constructor(i18n) {\n      this.i18n = i18n;\n      /**\n       * Accessible translations for the close and complete icons\n       */\n\n      this.translations = this.i18n.get().FILE_UPLOADER;\n      this.remove = new EventEmitter();\n      this.selectedFile = true;\n    }\n\n    get isInvalidText() {\n      return this.fileItem.invalidText;\n    }\n\n    ngOnDestroy() {\n      this.remove.emit();\n    }\n\n  }\n\n  FileComponent.ɵfac = function FileComponent_Factory(t) {\n    return new (t || FileComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.I18n));\n  };\n\n  FileComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FileComponent,\n    selectors: [[\"ibm-file\"]],\n    hostVars: 4,\n    hostBindings: function FileComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"bx--file__selected-file\", ctx.selectedFile)(\"bx--file__selected-file--invalid\", ctx.isInvalidText);\n      }\n    },\n    inputs: {\n      translations: \"translations\",\n      fileItem: \"fileItem\"\n    },\n    outputs: {\n      remove: \"remove\"\n    },\n    decls: 5,\n    vars: 4,\n    consts: [[1, \"bx--file-filename\"], [\"class\", \"bx--file__state-container\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"bx--file__state-container\"], [\"ibmIcon\", \"warning--filled\", \"class\", \"bx--file--invalid\", \"size\", \"16\", 4, \"ngIf\"], [\"type\", \"button\", \"tabindex\", \"0\", 1, \"bx--file-close\", 3, \"click\", \"keyup.enter\", \"keyup.space\"], [\"ibmIcon\", \"close\", \"size\", \"16\"], [\"ibmIcon\", \"warning--filled\", \"size\", \"16\", 1, \"bx--file--invalid\"], [1, \"bx--inline-loading__animation\"], [\"size\", \"sm\"], [\"ibmIcon\", \"checkmark--filled\", \"size\", \"16\", 1, \"bx--file-complete\", 3, \"ariaLabel\", \"isFocusable\"]],\n    template: function FileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"p\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, FileComponent_span_2_Template, 4, 2, \"span\", 1);\n        ɵngcc0.ɵɵtemplate(3, FileComponent_span_3_Template, 3, 0, \"span\", 2);\n        ɵngcc0.ɵɵtemplate(4, FileComponent_span_4_Template, 2, 2, \"span\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.fileItem.file.name);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.fileItem.state === \"edit\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.fileItem.state === \"upload\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.fileItem.state === \"complete\");\n      }\n    },\n    dependencies: [ɵngcc2.NgIf, ɵngcc4.Loading, ɵngcc5.IconDirective],\n    encapsulation: 2\n  });\n  /** @nocollapse */\n\n  return FileComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FileUploaderModule = /*#__PURE__*/(() => {\n  class FileUploaderModule {}\n\n  FileUploaderModule.ɵfac = function FileUploaderModule_Factory(t) {\n    return new (t || FileUploaderModule)();\n  };\n\n  FileUploaderModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FileUploaderModule\n  });\n  FileUploaderModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [CommonModule, ButtonModule, LoadingModule, IconModule]\n  });\n  return FileUploaderModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FileUploaderModule, {\n    declarations: function () {\n      return [FileUploader, FileComponent];\n    },\n    imports: function () {\n      return [CommonModule, ButtonModule, LoadingModule, IconModule];\n    },\n    exports: function () {\n      return [FileUploader, FileComponent];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { FileUploader, FileComponent, FileUploaderModule }; //# sourceMappingURL=carbon-components-angular-file-uploader.js.map","map":null,"metadata":{},"sourceType":"module"}