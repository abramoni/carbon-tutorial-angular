{"ast":null,"code":"/**\n *\n * carbon-angular v0.0.0 | carbon-components-angular-loading.js\n *\n * Copyright 2014, 2023 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Component, Input, HostBinding, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { I18n, I18nModule } from 'carbon-components-angular/i18n';\n/**\n * [See demo](../../?path=/story/components-loading--basic)\n *\n * <example-url>../../iframe.html?id=components-loading--basic</example-url>\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'carbon-components-angular/i18n';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"bx--loading--small\": a0,\n    \"bx--loading--stop\": a1,\n    \"bx--loading-overlay--stop\": a2\n  };\n};\n\nlet Loading = /*#__PURE__*/(() => {\n  class Loading {\n    constructor(i18n) {\n      this.i18n = i18n;\n      /**\n       * Accessible title for the loading circle.\n       * Defaults to the `LOADING.TITLE` value from the i18n service.\n       */\n\n      this.title = this.i18n.get().LOADING.TITLE;\n      /**\n       * set to `false` to stop the loading animation\n       */\n\n      this.isActive = true;\n      /**\n       * Specify the size of the button\n       */\n\n      this.size = \"normal\";\n      /**\n       * Set to `true` to make loader with an overlay.\n       */\n\n      this.overlay = false;\n    }\n\n  }\n\n  Loading.ɵfac = function Loading_Factory(t) {\n    return new (t || Loading)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.I18n));\n  };\n\n  Loading.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: Loading,\n    selectors: [[\"ibm-loading\"]],\n    hostVars: 2,\n    hostBindings: function Loading_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"bx--loading-overlay\", ctx.overlay);\n      }\n    },\n    inputs: {\n      title: \"title\",\n      isActive: \"isActive\",\n      size: \"size\",\n      overlay: \"overlay\"\n    },\n    decls: 5,\n    vars: 6,\n    consts: [[1, \"bx--loading\", 3, \"ngClass\"], [\"viewBox\", \"0 0 100 100\", 1, \"bx--loading__svg\"], [\"cx\", \"50%\", \"cy\", \"50%\", \"r\", \"44\", 1, \"bx--loading__stroke\"]],\n    template: function Loading_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(1, \"svg\", 1)(2, \"title\");\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(4, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction3(2, _c0, ctx.size === \"sm\", !ctx.isActive && !ctx.overlay, !ctx.isActive && ctx.overlay));\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ctx.title);\n      }\n    },\n    dependencies: [ɵngcc2.NgClass],\n    encapsulation: 2\n  });\n  /** @nocollapse */\n\n  return Loading;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet LoadingModule = /*#__PURE__*/(() => {\n  class LoadingModule {}\n\n  LoadingModule.ɵfac = function LoadingModule_Factory(t) {\n    return new (t || LoadingModule)();\n  };\n\n  LoadingModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: LoadingModule\n  });\n  LoadingModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [CommonModule, I18nModule]\n  });\n  return LoadingModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingModule, {\n    declarations: function () {\n      return [Loading];\n    },\n    imports: function () {\n      return [CommonModule, I18nModule];\n    },\n    exports: function () {\n      return [Loading];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Loading, LoadingModule }; //# sourceMappingURL=carbon-components-angular-loading.js.map","map":null,"metadata":{},"sourceType":"module"}