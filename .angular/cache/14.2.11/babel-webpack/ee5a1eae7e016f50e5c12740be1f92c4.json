{"ast":null,"code":"/**\n *\n * carbon-angular v0.0.0 | carbon-components-angular-list.js\n *\n * Copyright 2014, 2023 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Directive, HostBinding, ElementRef, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/**\n * Applies list styling to the item it is used on. Best used with `li`s.\n */\n\nimport * as ɵngcc0 from '@angular/core';\nlet ListItemDirective = /*#__PURE__*/(() => {\n  class ListItemDirective {\n    constructor() {\n      this.wrapper = true;\n    }\n\n  }\n\n  ListItemDirective.ɵfac = function ListItemDirective_Factory(t) {\n    return new (t || ListItemDirective)();\n  };\n\n  ListItemDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ListItemDirective,\n    selectors: [[\"\", \"ibmListItem\", \"\"]],\n    hostVars: 2,\n    hostBindings: function ListItemDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"bx--list__item\", ctx.wrapper);\n      }\n    }\n  });\n  return ListItemDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Applies either ordered or unordered styling to the list container it is applied to.\n *\n * [See demo](../../?path=/story/components-list--basic)\n *\n * For `ul`s it will apply unordered list styles, and for `ol`s it will apply ordered list styles.\n *\n * If a `ul` or `ol` is nested within a `li` the directive will apply nested list styling.\n *\n * <example-url>../../iframe.html?id=components-list--basic</example-url>\n */\n\n\nlet List = /*#__PURE__*/(() => {\n  class List {\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n    }\n\n    get ordered() {\n      if (this.nested) {\n        return false;\n      }\n\n      return this.elementRef.nativeElement.tagName === \"OL\";\n    }\n\n    get unordered() {\n      if (this.nested) {\n        return false;\n      }\n\n      return this.elementRef.nativeElement.tagName === \"UL\";\n    }\n\n    get nested() {\n      return !!(this.elementRef.nativeElement.parentElement && this.elementRef.nativeElement.parentElement.tagName === \"LI\");\n    }\n\n  }\n\n  List.ɵfac = function List_Factory(t) {\n    return new (t || List)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  List.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: List,\n    selectors: [[\"\", \"ibmList\", \"\"]],\n    hostVars: 6,\n    hostBindings: function List_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"bx--list--ordered\", ctx.ordered)(\"bx--list--unordered\", ctx.unordered)(\"bx--list--nested\", ctx.nested);\n      }\n    }\n  });\n  /** @nocollapse */\n\n  return List;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ListModule = /*#__PURE__*/(() => {\n  class ListModule {}\n\n  ListModule.ɵfac = function ListModule_Factory(t) {\n    return new (t || ListModule)();\n  };\n\n  ListModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ListModule\n  });\n  ListModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n  return ListModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ListModule, {\n    declarations: function () {\n      return [ListItemDirective, List];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [ListItemDirective, List];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ListItemDirective, List, ListModule }; //# sourceMappingURL=carbon-components-angular-list.js.map","map":null,"metadata":{},"sourceType":"module"}