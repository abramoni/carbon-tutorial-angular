{"ast":null,"code":"/**\n *\n * carbon-angular v0.0.0 | carbon-components-angular-input.js\n *\n * Copyright 2014, 2022 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Directive, HostBinding, Input, Component, TemplateRef, ViewChild, ContentChild, NgModule } from '@angular/core';\nimport { IconModule } from 'carbon-components-angular/icon';\n/**\n * A directive for applying styling to an input element.\n *\n * Example:\n *\n * ```html\n * <input ibmText/>\n * ```\n *\n * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/text-input/code) for more detail.\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'carbon-components-angular/icon';\nconst _c0 = [\"wrapper\"];\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"bx--text-input__invalid-icon\": a0,\n    \"bx--text-area__invalid-icon\": a1\n  };\n};\n\nfunction Label__svg_svg_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"svg\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(1, _c1, !ctx_r1.textArea, ctx_r1.textArea));\n  }\n}\n\nfunction Label__svg_svg_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"svg\", 8);\n  }\n}\n\nfunction Label_div_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6.helperText);\n  }\n}\n\nfunction Label_div_7_2_ng_template_0_Template(rf, ctx) {}\n\nfunction Label_div_7_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, Label_div_7_2_ng_template_0_Template, 0, 0, \"ng-template\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.helperText);\n  }\n}\n\nconst _c2 = function (a0) {\n  return {\n    \"bx--form__helper-text--disabled\": a0\n  };\n};\n\nfunction Label_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(1, Label_div_7_ng_container_1_Template, 2, 1, \"ng-container\", 10);\n    ɵngcc0.ɵɵtemplate(2, Label_div_7_2_Template, 1, 1, null, 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c2, ctx_r3.disabled));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r3.isTemplate(ctx_r3.helperText));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.isTemplate(ctx_r3.helperText));\n  }\n}\n\nfunction Label_div_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r9.invalidText);\n  }\n}\n\nfunction Label_div_8_2_ng_template_0_Template(rf, ctx) {}\n\nfunction Label_div_8_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, Label_div_8_2_ng_template_0_Template, 0, 0, \"ng-template\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r10.invalidText);\n  }\n}\n\nfunction Label_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵtemplate(1, Label_div_8_ng_container_1_Template, 2, 1, \"ng-container\", 10);\n    ɵngcc0.ɵɵtemplate(2, Label_div_8_2_Template, 1, 1, null, 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.isTemplate(ctx_r4.invalidText));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.isTemplate(ctx_r4.invalidText));\n  }\n}\n\nfunction Label_div_9_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r12.warnText);\n  }\n}\n\nfunction Label_div_9_2_ng_template_0_Template(rf, ctx) {}\n\nfunction Label_div_9_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, Label_div_9_2_ng_template_0_Template, 0, 0, \"ng-template\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r13.warnText);\n  }\n}\n\nfunction Label_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵtemplate(1, Label_div_9_ng_container_1_Template, 2, 1, \"ng-container\", 10);\n    ɵngcc0.ɵɵtemplate(2, Label_div_9_2_Template, 1, 1, null, 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r5.isTemplate(ctx_r5.warnText));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.isTemplate(ctx_r5.warnText));\n  }\n}\n\nconst _c3 = [\"*\", [[\"input\"], [\"textarea\"], [\"div\"]]];\n\nconst _c4 = function (a0, a1) {\n  return {\n    \"bx--label--disabled\": a0,\n    \"bx--skeleton\": a1\n  };\n};\n\nconst _c5 = function (a0) {\n  return {\n    \"bx--text-input__field-wrapper--warning\": a0\n  };\n};\n\nconst _c6 = [\"*\", \"input,textarea,div\"];\nlet TextInput = /*#__PURE__*/(() => {\n  class TextInput {\n    constructor() {\n      /**\n       * `light` or `dark` input theme\n       */\n      this.theme = \"dark\";\n      /**\n       * Input field render size\n       */\n\n      this.size = \"md\";\n      this.inputClass = true;\n      this.invalid = false;\n      this.warn = false;\n      this.skeleton = false;\n    }\n\n    get isSizeXl() {\n      return this.size === \"xl\";\n    }\n\n    get isSizeSm() {\n      return this.size === \"sm\";\n    }\n\n    get isLightTheme() {\n      return this.theme === \"light\";\n    }\n\n  }\n\n  TextInput.ɵfac = function TextInput_Factory(t) {\n    return new (t || TextInput)();\n  };\n\n  TextInput.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TextInput,\n    selectors: [[\"\", \"ibmText\", \"\"]],\n    hostVars: 14,\n    hostBindings: function TextInput_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"bx--text-input\", ctx.inputClass)(\"bx--text-input--invalid\", ctx.invalid)(\"bx--text-input__field-wrapper--warning\", ctx.warn)(\"bx--skeleton\", ctx.skeleton)(\"bx--text-input--xl\", ctx.isSizeXl)(\"bx--text-input--sm\", ctx.isSizeSm)(\"bx--text-input--light\", ctx.isLightTheme);\n      }\n    },\n    inputs: {\n      theme: \"theme\",\n      size: \"size\",\n      invalid: \"invalid\",\n      warn: \"warn\",\n      skeleton: \"skeleton\"\n    }\n  });\n  return TextInput;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive for applying styling to a textarea element.\n *\n * Example:\n *\n * ```html\n * <textarea ibmTextArea></textarea>\n * ```\n *\n * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/text-input/code) for more detail.\n */\n\n\nlet TextArea = /*#__PURE__*/(() => {\n  class TextArea {\n    constructor() {\n      /**\n       * `light` or `dark` input theme\n       */\n      this.theme = \"dark\";\n      this.baseClass = true;\n      this.invalid = false;\n      this.skeleton = false;\n    }\n\n    get isLightTheme() {\n      return this.theme === \"light\";\n    }\n\n  }\n\n  TextArea.ɵfac = function TextArea_Factory(t) {\n    return new (t || TextArea)();\n  };\n\n  TextArea.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TextArea,\n    selectors: [[\"\", \"ibmTextArea\", \"\"]],\n    hostVars: 8,\n    hostBindings: function TextArea_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"bx--text-area\", ctx.baseClass)(\"bx--text-area--invalid\", ctx.invalid)(\"bx--skeleton\", ctx.skeleton)(\"bx--text-area--light\", ctx.isLightTheme);\n      }\n    },\n    inputs: {\n      theme: \"theme\",\n      invalid: \"invalid\",\n      skeleton: \"skeleton\"\n    }\n  });\n  return TextArea;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * [See demo](../../?path=/story/components-input--label)\n *\n * ```html\n * <ibm-label labelState=\"success\">\n * \t<label label>Field with success</label>\n * \t<input type=\"text\" class=\"input-field\">\n * </ibm-label>\n *\n * <ibm-label labelState=\"warning\">\n * \t<label label>Field with warning</label>\n * \t<input type=\"text\" class=\"input-field\">\n * </ibm-label>\n *\n * <ibm-label labelState=\"error\">\n * \t<label label>Field with error</label>\n * \t<input type=\"text\" class=\"input-field\">\n * </ibm-label>\n * ```\n *\n * <example-url>../../iframe.html?id=components-input--label</example-url>\n */\n\n\nlet Label = /*#__PURE__*/(() => {\n  class Label {\n    /**\n     * Creates an instance of Label.\n     */\n    constructor() {\n      /**\n       * The class of the wrapper\n       */\n      this.wrapperClass = \"bx--text-input__field-wrapper\";\n      /**\n       * The id of the input item associated with the `Label`. This value is also used to associate the `Label` with\n       * its input counterpart through the 'for' attribute.\n      */\n\n      this.labelInputID = \"ibm-label-\" + Label.labelCounter;\n      /**\n       * State of the `Label` will determine the styles applied.\n       */\n\n      this.labelState = \"\";\n      /**\n       * Set to `true` for a disabled label.\n       */\n\n      this.disabled = false;\n      /**\n       * Set to `true` for a loading label.\n       */\n\n      this.skeleton = false;\n      /**\n       * Set to `true` for an invalid label component.\n       */\n\n      this.invalid = false;\n      /**\n        * Set to `true` to show a warning (contents set by warningText)\n        */\n\n      this.warn = false;\n      this.labelClass = true;\n      Label.labelCounter++;\n    }\n    /**\n     * Update wrapper class if a textarea is hosted.\n     */\n\n\n    ngAfterContentInit() {\n      if (this.textArea) {\n        this.wrapperClass = \"bx--text-area__wrapper\";\n      }\n    }\n    /**\n     * Sets the id on the input item associated with the `Label`.\n     */\n\n\n    ngAfterViewInit() {\n      if (this.wrapper) {\n        const inputElement = this.wrapper.nativeElement.querySelector(\"input,textarea,div\");\n\n        if (inputElement) {\n          inputElement.setAttribute(\"id\", this.labelInputID);\n        }\n      }\n    }\n\n    isTemplate(value) {\n      return value instanceof TemplateRef;\n    }\n\n  }\n\n  Label.ɵfac = function Label_Factory(t) {\n    return new (t || Label)();\n  };\n\n  Label.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: Label,\n    selectors: [[\"ibm-label\"]],\n    contentQueries: function Label_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, TextArea, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.textArea = _t.first);\n      }\n    },\n    viewQuery: function Label_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.wrapper = _t.first);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function Label_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"bx--form-item\", ctx.labelClass);\n      }\n    },\n    inputs: {\n      labelInputID: \"labelInputID\",\n      labelState: \"labelState\",\n      disabled: \"disabled\",\n      skeleton: \"skeleton\",\n      invalid: \"invalid\",\n      warn: \"warn\",\n      helperText: \"helperText\",\n      invalidText: \"invalidText\",\n      warnText: \"warnText\",\n      ariaLabel: \"ariaLabel\"\n    },\n    ngContentSelectors: _c6,\n    decls: 10,\n    vars: 17,\n    consts: [[1, \"bx--label\", 3, \"for\", \"ngClass\"], [3, \"ngClass\"], [\"wrapper\", \"\"], [\"ibmIcon\", \"warning--filled\", \"size\", \"16\", 3, \"ngClass\", 4, \"ngIf\"], [\"ibmIcon\", \"warning--alt--filled\", \"size\", \"16\", \"class\", \"bx--text-input__invalid-icon bx--text-input__invalid-icon--warning\", 4, \"ngIf\"], [\"class\", \"bx--form__helper-text\", 3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"bx--form-requirement\", 4, \"ngIf\"], [\"ibmIcon\", \"warning--filled\", \"size\", \"16\", 3, \"ngClass\"], [\"ibmIcon\", \"warning--alt--filled\", \"size\", \"16\", 1, \"bx--text-input__invalid-icon\", \"bx--text-input__invalid-icon--warning\"], [1, \"bx--form__helper-text\", 3, \"ngClass\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\"], [1, \"bx--form-requirement\"]],\n    template: function Label_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1, 2);\n        ɵngcc0.ɵɵtemplate(4, Label__svg_svg_4_Template, 1, 4, \"svg\", 3);\n        ɵngcc0.ɵɵtemplate(5, Label__svg_svg_5_Template, 1, 0, \"svg\", 4);\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(7, Label_div_7_Template, 3, 5, \"div\", 5);\n        ɵngcc0.ɵɵtemplate(8, Label_div_8_Template, 3, 2, \"div\", 6);\n        ɵngcc0.ɵɵtemplate(9, Label_div_9_Template, 3, 2, \"div\", 6);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"for\", ctx.labelInputID)(\"ngClass\", ɵngcc0.ɵɵpureFunction2(12, _c4, ctx.disabled, ctx.skeleton));\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaLabel);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassMap(ctx.wrapperClass);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(15, _c5, ctx.warn));\n        ɵngcc0.ɵɵattribute(\"data-invalid\", ctx.invalid ? true : null);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.warn && ctx.invalid);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.invalid && ctx.warn);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.skeleton && ctx.helperText && !ctx.invalid && !ctx.warn);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.warn && ctx.invalid);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.invalid && ctx.warn);\n      }\n    },\n    directives: [ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc2.IconDirective, ɵngcc1.NgTemplateOutlet],\n    encapsulation: 2\n  });\n  /**\n   * Used to build the id of the input item associated with the `Label`.\n   */\n\n  Label.labelCounter = 0;\n  /** @nocollapse */\n\n  return Label;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); // modules\n\n\nlet InputModule = /*#__PURE__*/(() => {\n  class InputModule {}\n\n  InputModule.ɵfac = function InputModule_Factory(t) {\n    return new (t || InputModule)();\n  };\n\n  InputModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: InputModule\n  });\n  InputModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, IconModule]]\n  });\n  return InputModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InputModule, {\n    declarations: function () {\n      return [Label, TextInput, TextArea];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, IconModule];\n    },\n    exports: function () {\n      return [Label, TextInput, TextArea];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TextInput, InputModule, Label, TextArea }; //# sourceMappingURL=carbon-components-angular-input.js.map","map":null,"metadata":{},"sourceType":"module"}