{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { NgModule } from '@angular/core';\nimport { ApolloModule, APOLLO_OPTIONS } from 'apollo-angular';\nimport { InMemoryCache } from '@apollo/client/core';\nimport { HttpLink } from 'apollo-angular/http';\nconst uri = ''; // <-- add the URL of the GraphQL server here\n\nexport function createApollo(httpLink) {\n  return {\n    link: httpLink.create({\n      uri\n    }),\n    cache: new InMemoryCache()\n  };\n}\nlet GraphQLModule = class GraphQLModule {};\nGraphQLModule = __decorate([NgModule({\n  exports: [ApolloModule],\n  providers: [{\n    provide: APOLLO_OPTIONS,\n    useFactory: createApollo,\n    deps: [HttpLink]\n  }]\n})], GraphQLModule);\nexport { GraphQLModule };","map":null,"metadata":{},"sourceType":"module"}